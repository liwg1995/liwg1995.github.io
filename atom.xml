<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>禹都一只猫</title>
  
  <subtitle>逐梦，努力，乐观，追求</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.olei.me/"/>
  <updated>2018-02-28T07:10:01.989Z</updated>
  <id>http://blog.olei.me/</id>
  
  <author>
    <name>olei.me</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql数据库主从复制</title>
    <link href="http://blog.olei.me/2018/02/28/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <id>http://blog.olei.me/2018/02/28/mysql数据库主从复制/</id>
    <published>2018-02-28T04:16:47.000Z</published>
    <updated>2018-02-28T07:10:01.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>准备装有mysql的两台服务器<br><code>IP</code>分别为：  </p><ul><li>xxx.xxx.xxx.1 （主）</li><li>xxx.xxx.xxx.2 （从）</li></ul></blockquote><a id="more"></a><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><ul><li>将这两台IP授权，允许其它IP通过账号密码进行访问（添加账号为<code>test</code>，密码为<code>12345</code>）</li><li>分别登录两台服务器，进入<code>mysql</code>，输入：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; Grant all privileges on *.* to &apos;test&apos;@&apos;%&apos; identified by &apos;123456&apos; with grant option; </div><div class="line">mysql&gt; Flush privileges;</div></pre></td></tr></table></figure><blockquote><p>注意：  </p><ol><li>上述代码的意思是创建一个<code>test</code>用户，<code>host=%</code>，允许所有<code>IP</code>通过用户名<code>test</code>进行访问。添加完刷新权限。  </li><li>此时两台机子的mysql应该是可以相互访问的，如果不可以，导致的原因有很多，最常见的是防火墙没关，或者是安全组没有放通<code>3306</code>端口  </li></ol></blockquote><h3 id="主数据库配置"><a href="#主数据库配置" class="headerlink" title="主数据库配置"></a>主数据库配置</h3><ul><li>登录主服务器，进入<code>mysql</code>的配置文件<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>,在<code>[mysqld]</code>下面添加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">server-id=1 </div><div class="line">log-bin=master-bin </div><div class="line">log-bin-index=master-bin.index</div></pre></td></tr></table></figure><ul><li>重启服务(这个是<code>ubuntu</code>的重启方式之一)：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/mysql restart</div></pre></td></tr></table></figure><ul><li>进入<code>mysql</code>，查看主服务器<code>mysql master</code>状态:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show master status;</div><div class="line">+-------------------+----------+--------------+------------------+</div><div class="line">| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB |</div><div class="line">+-------------------+----------+--------------+------------------+</div><div class="line">| master-bin.000001 |      245 |              |                  |</div><div class="line">+-------------------+----------+--------------+------------------+</div></pre></td></tr></table></figure><blockquote><p>日志File为<code>master-bin.000001</code>，Position为<code>245</code>（这个得记下来，设置从服务的要用）  </p></blockquote><h3 id="从数据库配置"><a href="#从数据库配置" class="headerlink" title="从数据库配置"></a>从数据库配置</h3><ul><li>登录从服务器，进入<code>mysql</code>的配置文件<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>,在<code>[mysqld]</code>下面添加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">server-id=10</div><div class="line">log-bin=master-bin</div><div class="line">log-bin-index=master-bin.index</div></pre></td></tr></table></figure><blockquote><p><code>server-id</code>可以是其他，但是不能与主服务器上的一样  </p></blockquote><h3 id="从数据库连接主服务"><a href="#从数据库连接主服务" class="headerlink" title="从数据库连接主服务"></a>从数据库连接主服务</h3><ul><li>在从服务器中，登录数据库，输入：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; change master to</div><div class="line">    -&gt; master_host = &apos;xxx.xxx.xxx.1&apos;,</div><div class="line">    -&gt; master_user=&apos;test&apos;,</div><div class="line">    -&gt; master_password=&apos;12345&apos;,</div><div class="line">    -&gt; master_log_file=&apos;master-bin.000001&apos;,</div><div class="line">    -&gt; master_log_pos= 245;</div><div class="line">Query OK, 0 rows affected, 2 warnings (0.13 sec)</div></pre></td></tr></table></figure><h3 id="启动slave"><a href="#启动slave" class="headerlink" title="启动slave"></a>启动<code>slave</code></h3><ul><li>启动：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; start slave;</div><div class="line">Query OK, 0 rows affected (0.01 sec)</div></pre></td></tr></table></figure><ul><li>查看状态：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show slave status\G</div></pre></td></tr></table></figure><blockquote><p>显示的内容一定有这个情况才算配置正常：</p></blockquote><pre><code>Slave_IO_Running: YesSlave_SQL_Running: Yes</code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul><li>在主数据库上创建一个<code>test_zhucong</code>的数据库，创建一个<code>test</code>表  </li></ul><p><img src="https://resources.olei.me/%E4%B8%BB%E4%BB%8E.png" alt=""><br>可以看到，从数据库也相应的有了这个数据库以及表</p><blockquote><p>注意</p><ol><li>做主从复制时，首先确定两台服务器的mysql没任何自定义库(否则只可以配置完后之前的东西没法同步,或者两个库都有完全相同的库应该也是可以同步，图中主数据库有些数据库在从的里面没有，就是因为主从设置之前，创建了)  </li><li><code>server_id</code>必须配置不一样</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;准备装有mysql的两台服务器&lt;br&gt;&lt;code&gt;IP&lt;/code&gt;分别为：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xxx.xxx.xxx.1 （主）&lt;/li&gt;
&lt;li&gt;xxx.xxx.xxx.2 （从）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://blog.olei.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>clickhouse的python库:clickhouse-driver使用</title>
    <link href="http://blog.olei.me/2018/01/27/clickhouse%E7%9A%84python%E5%BA%93-clickhouse-driver%E4%BD%BF%E7%94%A8/"/>
    <id>http://blog.olei.me/2018/01/27/clickhouse的python库-clickhouse-driver使用/</id>
    <published>2018-01-27T10:19:23.000Z</published>
    <updated>2018-01-27T10:21:02.593Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install clickhouse-driver</div></pre></td></tr></table></figure><a id="more"></a><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">from clickhouse_driver import Client</div></pre></td></tr></table></figure><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import clickhouse_driver</div><div class="line"></div><div class="line">client = clickhouse_driver.Client(host=&apos;localhost&apos;, port=&apos;9000&apos;, database=&apos;xxx&apos;, user=&apos;default&apos;, password=&apos;xxx&apos;)</div></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client.execute(&apos;create table aaa(id Int8,name Stinrg) ENGINE = Memory&apos;)</div></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">for id in client.execute(&apos;SELECT id,name FROM aaa limit 20&apos;):</div><div class="line">    print(id)</div></pre></td></tr></table></figure><h3 id="添加插入"><a href="#添加插入" class="headerlink" title="添加插入"></a>添加插入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client.execute(&quot;&quot;&quot;insert into aaa (id,name) VALUES&quot;&quot;&quot;, [(1, &apos;lwg&apos;)])</div></pre></td></tr></table></figure><hr><ul><li><a href="https://github.com/mymarilyn/clickhouse-driver" target="_blank" rel="external">github</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pip install clickhouse-driver&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="clickhouse" scheme="http://blog.olei.me/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>使用sqlalchemy为clickhouse创建数据表</title>
    <link href="http://blog.olei.me/2018/01/24/%E4%BD%BF%E7%94%A8sqlalchemy%E4%B8%BAclickhouse%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8/"/>
    <id>http://blog.olei.me/2018/01/24/使用sqlalchemy为clickhouse创建数据表/</id>
    <published>2018-01-24T10:40:22.000Z</published>
    <updated>2018-01-24T10:53:42.710Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装需要的包"><a href="#安装需要的包" class="headerlink" title="安装需要的包"></a>安装需要的包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pip install clickhouse-sqlalchemy</div></pre></td></tr></table></figure><a id="more"></a><h3 id="使用demo"><a href="#使用demo" class="headerlink" title="使用demo"></a>使用demo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line">from sqlalchemy import create_engine, Column, MetaData, literal</div><div class="line">from clickhouse_sqlalchemy  import Table, make_session, get_declarative_base, types, engines</div><div class="line"></div><div class="line">uri = &quot;clickhouse://default:Qbb4RJa4@localhost/dayday&quot;</div><div class="line"></div><div class="line">engine = create_engine(uri)</div><div class="line">session = make_session(engine)</div><div class="line">metadata = MetaData(bind=engine)</div><div class="line"></div><div class="line">Base = get_declarative_base(metadata=metadata)</div><div class="line"></div><div class="line">day  = Table(&apos;date&apos;,metadata,</div><div class="line">              Column(&apos;day&apos;,types.Date,primary_key=True),</div><div class="line">              Column(&apos;value&apos;,types.Int32,server_default=literal(1)),</div><div class="line">              engines.Memory()</div><div class="line">              )</div><div class="line"></div><div class="line"></div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">        day.create()</div></pre></td></tr></table></figure><blockquote><p>我设置了密码，自己没有设置，<code>@</code>与<code>//</code>前面几个不用写</p></blockquote><h3 id="使用一键运行创建大量数据库表"><a href="#使用一键运行创建大量数据库表" class="headerlink" title="使用一键运行创建大量数据库表"></a>使用一键运行创建大量数据库表</h3><pre><code># -*- coding: utf-8 -*-from sqlalchemy import create_engine, Column, MetaData, literalfrom clickhouse_sqlalchemy import make_session, get_declarative_base, types, enginesfrom datetime import datetimeuri = &quot;clickhouse://default:Qbb4RJa4@localhost/default&quot;engine = create_engine(uri)session = make_session(engine)metadata = MetaData(bind=engine)Base = get_declarative_base(metadata=metadata)class User(Base):    __tablename__ = &quot;user&quot;    id = Column(types.Int8, primary_key=True)    name = Column(types.String)    pwd = Column(types.String)    email = Column(types.String)    phone = Column(types.String)    info = Column(types.String)    face = Column(types.String)    addtime = Column(types.Date)    uuid = Column(types.String)    __table_args__ = (        engines.Memory(),    )    def __repr__(self):        return &quot;&lt;User %r&gt;&quot; % self.nameif __name__ == &quot;__main__&quot;:   Base.metadata.create_all(engine)</code></pre><blockquote><p>多个数据表可以写多个<code>class</code>  </p><h2 id="访问数据库就可以看到新创建的数据库"><a href="#访问数据库就可以看到新创建的数据库" class="headerlink" title="访问数据库就可以看到新创建的数据库  "></a>访问数据库就可以看到新创建的数据库  </h2><p>遇见的问题是关联表之间的问题，关联表的时候，显示数据表引擎有问题，还不知怎么解决，探索中… … </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装需要的包&quot;&gt;&lt;a href=&quot;#安装需要的包&quot; class=&quot;headerlink&quot; title=&quot;安装需要的包&quot;&gt;&lt;/a&gt;安装需要的包&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ pip install clickhouse-sqlalchemy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="clickhouse" scheme="http://blog.olei.me/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>clickhouse设置密码登录以及只读账号</title>
    <link href="http://blog.olei.me/2018/01/23/clickhouse%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E4%BB%A5%E5%8F%8A%E5%8F%AA%E8%AF%BB%E8%B4%A6%E5%8F%B7/"/>
    <id>http://blog.olei.me/2018/01/23/clickhouse设置密码登录以及只读账号/</id>
    <published>2018-01-23T11:20:17.000Z</published>
    <updated>2018-01-23T11:21:04.164Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设置明文密码"><a href="#设置明文密码" class="headerlink" title="设置明文密码"></a>设置明文密码</h3><ul><li><code>cd</code>到<code>/etc/clickhouse-server</code>目录<a id="more"></a></li><li>编辑<code>users.xml</code>文件  </li></ul><blockquote><p>查找到<code>&lt;user&gt;</code>的标签里面，找到<code>&lt;password&gt;</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">&lt;users&gt;</div><div class="line">        &lt;!-- If user name was not specified, &apos;default&apos; user is used. --&gt;</div><div class="line">        &lt;default&gt;</div><div class="line">            &lt;!-- Password could be specified in plaintext or in SHA256 (in hex format).</div><div class="line"></div><div class="line">                 If you want to specify password in plaintext (not recommended), place it in &apos;password&apos; element.</div><div class="line">                 Example: &lt;password&gt;qwerty&lt;/password&gt;.</div><div class="line">                 Password could be empty.</div><div class="line"></div><div class="line">                 If you want to specify SHA256, place it in &apos;password_sha256_hex&apos; element.</div><div class="line">                 Example: &lt;password_sha256_hex&gt;65e84be33532fb784c48129675f9eff3a682b27168c0ea744b2cf58ee02337c5&lt;/password_sha256_hex&gt;</div><div class="line"></div><div class="line">                 How to generate decent password:</div><div class="line">                 Execute: PASSWORD=$(base64 &lt; /dev/urandom | head -c8); echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha256sum | tr -d &apos;-&apos;</div><div class="line">                 In first line will be password and in second - corresponding SHA256.</div><div class="line">            --&gt;</div><div class="line">            &lt;password&gt;&lt;/password&gt;</div><div class="line"></div><div class="line">            &lt;!-- List of networks with open access.</div><div class="line"></div><div class="line">                 To open access from everywhere, specify:</div><div class="line">                    &lt;ip&gt;::/0&lt;/ip&gt;</div><div class="line"></div><div class="line">                 To open access only from localhost, specify:</div><div class="line">                    &lt;ip&gt;::1&lt;/ip&gt;</div><div class="line">                    &lt;ip&gt;127.0.0.1&lt;/ip&gt;</div><div class="line"></div><div class="line">                 Each element of list has one of the following forms:</div><div class="line">                 &lt;ip&gt; IP-address or network mask. Examples: 213.180.204.3 or 10.0.0.1/8 or 2a02:6b8::3 or 2a02:6b8::3/64.</div><div class="line">                 &lt;host&gt; Hostname. Example: server01.yandex.ru.</div><div class="line">                     To check access, DNS query is performed, and all received addresses compared to peer address.</div><div class="line">                 &lt;host_regexp&gt; Regular expression for host names. Example, ^server\d\d-\d\d-\d\.yandex\.ru$</div><div class="line">                     To check access, DNS PTR query is performed for peer address and then regexp is applied.</div><div class="line">                     Then, for result of PTR query, another DNS query is performed and all received addresses compared to peer address.</div><div class="line">                     Strongly recommended that regexp is ends with $</div><div class="line">                 All results of DNS requests are cached till server restart.</div><div class="line">            --&gt;</div><div class="line">            &lt;networks incl=&quot;networks&quot; replace=&quot;replace&quot;&gt;</div><div class="line">                &lt;ip&gt;::/0&lt;/ip&gt;</div><div class="line">            &lt;/networks&gt;</div><div class="line"></div><div class="line">            &lt;!-- Settings profile for user. --&gt;</div><div class="line">            &lt;profile&gt;default&lt;/profile&gt;</div><div class="line"></div><div class="line">            &lt;!-- Quota for user. --&gt;</div><div class="line">            &lt;quota&gt;default&lt;/quota&gt;</div><div class="line">        &lt;/default&gt;</div></pre></td></tr></table></figure><p>在<code>&lt;password&gt;</code>之间创建密码，然后重启  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/clickhouse-server restart</div></pre></td></tr></table></figure><h3 id="设置sha256加密的密码"><a href="#设置sha256加密的密码" class="headerlink" title="设置sha256加密的密码"></a>设置<code>sha256</code>加密的密码</h3><ul><li>还是上面的那个文件<blockquote><p>将<code>&lt;password&gt;</code>改为<code>&lt;password_sha256_hex&gt;</code>，之间填加密之后的东西</p></blockquote></li><li>如何加密？</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ PASSWORD=$(base64 &lt; /dev/urandom | head -c8);</div><div class="line">$ echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha256sum | tr -d &apos;-&apos;</div></pre></td></tr></table></figure><ul><li>生成大概如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1Ng71p8I</div><div class="line">378cd552637f2c779c25076bee090eaae3700c1be7e8ac4da82c60fba833b4c8</div></pre></td></tr></table></figure><blockquote><p>第一行为明文密码，第二行为加密之后的密码，在<code>&lt;password_sha256_hex&gt;</code>之间填入加密之后的密码</p></blockquote><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ clickhouse-client -u default --password=1Ng71p8I -m</div></pre></td></tr></table></figure><h3 id="设置只读账号："><a href="#设置只读账号：" class="headerlink" title="设置只读账号："></a>设置只读账号：</h3><ul><li>添加一个比如<code>ck</code>的用户<br>在<code>&lt;user&gt;&lt;/user&gt;</code>中添加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;ck&gt;</div><div class="line">    &lt;readonly&gt;</div><div class="line">            &lt;password&gt;1Ng71p8I&lt;/password&gt;</div><div class="line">            &lt;networks incl=&quot;networks&quot; replace=&quot;replace&quot;&gt;</div><div class="line">                &lt;!--&lt;ip&gt;::1&lt;/ip&gt;--&gt;</div><div class="line">                &lt;ip&gt;127.0.0.1&lt;/ip&gt;</div><div class="line">            &lt;/networks&gt;</div><div class="line">            &lt;profile&gt;readonly&lt;/profile&gt;</div><div class="line">            &lt;quota&gt;default&lt;/quota&gt;</div><div class="line">    &lt;/readonly&gt;</div><div class="line">&lt;/ck&gt;</div></pre></td></tr></table></figure><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><ul><li>修改了配置文件之后，需要重启</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/clickhouse-server restart</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;设置明文密码&quot;&gt;&lt;a href=&quot;#设置明文密码&quot; class=&quot;headerlink&quot; title=&quot;设置明文密码&quot;&gt;&lt;/a&gt;设置明文密码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;到&lt;code&gt;/etc/clickhouse-server&lt;/code&gt;目录
    
    </summary>
    
    
      <category term="clickhouse" scheme="http://blog.olei.me/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16.04安装saltstack</title>
    <link href="http://blog.olei.me/2018/01/23/ubuntu16-04%E5%AE%89%E8%A3%85saltstack/"/>
    <id>http://blog.olei.me/2018/01/23/ubuntu16-04安装saltstack/</id>
    <published>2018-01-23T06:18:03.000Z</published>
    <updated>2018-01-23T06:18:56.965Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加信任"><a href="#添加信任" class="headerlink" title="添加信任"></a>添加信任</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget -O - https://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest/SALTSTACK-GPG-KEY.pub | sudo apt-key add -</div></pre></td></tr></table></figure><a id="more"></a><h3 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /ect/apt/sources.list.d/saltstack.list</div></pre></td></tr></table></figure><ul><li>写入:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deb http://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest xenial main</div></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><p><code>master</code>端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ apt-get update</div><div class="line">$ apt-get install salt-master</div></pre></td></tr></table></figure></li><li><p><code>minion</code>端：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ apt-get update</div><div class="line">$ apt-get install salt-minion</div></pre></td></tr></table></figure><blockquote><p><code>master</code>只需要一台机器就可以了，多台也没问题，对小公司或者个人来讲就多余了，<code>minion</code>端可以是成百上千台</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加信任&quot;&gt;&lt;a href=&quot;#添加信任&quot; class=&quot;headerlink&quot; title=&quot;添加信任&quot;&gt;&lt;/a&gt;添加信任&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ wget -O - https://repo.saltstack.com/apt/ubuntu/16.04/amd64/latest/SALTSTACK-GPG-KEY.pub | sudo apt-key add -&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="saltstack" scheme="http://blog.olei.me/tags/saltstack/"/>
    
  </entry>
  
  <entry>
    <title>flask的蓝图机制注册前后台示例</title>
    <link href="http://blog.olei.me/2018/01/20/flask%E7%9A%84%E8%93%9D%E5%9B%BE%E6%9C%BA%E5%88%B6%E6%B3%A8%E5%86%8C%E5%89%8D%E5%90%8E%E5%8F%B0%E7%A4%BA%E4%BE%8B/"/>
    <id>http://blog.olei.me/2018/01/20/flask的蓝图机制注册前后台示例/</id>
    <published>2018-01-20T10:35:37.000Z</published>
    <updated>2018-01-20T10:36:31.938Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前台为<code>home</code>目录，后台为<code>admin</code>目录  </p></blockquote><h3 id="蓝图Blueprint"><a href="#蓝图Blueprint" class="headerlink" title="蓝图Blueprint"></a>蓝图<code>Blueprint</code></h3><a id="more"></a><ul><li><code>app</code>项目目录结构：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">app</div><div class="line">├── __init__.py</div><div class="line">├── __init__.pyc</div><div class="line">├── admin</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── __init__.pyc</div><div class="line">│   ├── forms.py</div><div class="line">│   ├── views.py</div><div class="line">│   └── views.pyc</div><div class="line">├── home</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── __init__.pyc</div><div class="line">│   ├── forms.py</div><div class="line">│   ├── views.py</div><div class="line">│   └── views.pyc</div><div class="line">└── models.py</div></pre></td></tr></table></figure><p><img src="https://resources.olei.me/tree.png" alt="tree">   </p><blockquote><p>蓝图需要引入<code>flask</code>中的<code>Blueprint</code>  </p></blockquote><ul><li><code>home</code>目录下<code>__init__.py</code>引入蓝图:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">from flask import Blueprint</div></pre></td></tr></table></figure><ul><li>写入蓝图:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">home = Blueprint(&quot;home&quot;,__name__)</div></pre></td></tr></table></figure><ul><li>导入视图</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import app.home.views</div></pre></td></tr></table></figure><p>完整代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Time    : 2018/1/6 15:00</div><div class="line"># @Author  : liwugang</div><div class="line"># @Email   : liwg@olei.me</div><div class="line"># @File    : __init__.py</div><div class="line"># @Software: PyCharm</div><div class="line">from flask import Blueprint</div><div class="line"></div><div class="line">home = Blueprint(&quot;home&quot;,__name__)</div><div class="line"></div><div class="line">import app.home.views</div></pre></td></tr></table></figure><ul><li><code>admin</code>与上面类似，<code>__init__.py</code>完整代码:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Time    : 2018/1/6 15:00</div><div class="line"># @Author  : liwugang</div><div class="line"># @Email   : liwg@olei.me</div><div class="line"># @File    : __init__.py</div><div class="line"># @Software: PyCharm</div><div class="line"></div><div class="line">from flask import Blueprint</div><div class="line"></div><div class="line">admin = Blueprint(&quot;admin&quot;,__name__)</div><div class="line"></div><div class="line">import app.admin.views</div></pre></td></tr></table></figure><h4 id="app项目的-init-py书写"><a href="#app项目的-init-py书写" class="headerlink" title="app项目的__init__.py书写"></a><code>app</code>项目的<code>__init__.py</code>书写</h4><ul><li>引入蓝图模块</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">from flask import Blueprint</div></pre></td></tr></table></figure><ul><li>引入<code>home</code>、<code>admin</code>的蓝图</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from app.home import home as home_blueprint</div><div class="line">from app.admin import admin as admin_blueprint</div></pre></td></tr></table></figure><ul><li>注册蓝图，为前端<code>home</code>分配默认路由为<code>home</code>目录的<code>/</code>，后端<code>admin</code>分配默认路由为<code>/admin</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">app.register_blueprint(home_blueprint)</div><div class="line">app.register_blueprint(admin_blueprint, url_prefix=&quot;/admin&quot;)</div></pre></td></tr></table></figure><p>完整代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Time    : 2018/1/6 14:59</div><div class="line"># @Author  : liwugang</div><div class="line"># @Email   : liwg@olei.me</div><div class="line"># @File    : __init__.py</div><div class="line"># @Software: PyCharm</div><div class="line"></div><div class="line">from flask import Flask</div><div class="line"></div><div class="line">app = Flask(__name__)</div><div class="line">app.debug = True</div><div class="line"></div><div class="line">from app.home import home as home_blueprint</div><div class="line">from app.admin import admin as admin_blueprint</div><div class="line"></div><div class="line">app.register_blueprint(home_blueprint)</div><div class="line">app.register_blueprint(admin_blueprint, url_prefix=&quot;/admin&quot;)</div></pre></td></tr></table></figure><h4 id="定义两个的视图"><a href="#定义两个的视图" class="headerlink" title="定义两个的视图"></a>定义两个的视图</h4><ul><li>以<code>admin</code>的<code>views.py</code>为例</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Time    : 2018/1/6 15:01</div><div class="line"># @Author  : liwugang</div><div class="line"># @Email   : liwg@olei.me</div><div class="line"># @File    : views.py</div><div class="line"># @Software: PyCharm</div><div class="line"></div><div class="line">from . import admin</div><div class="line"></div><div class="line"></div><div class="line">@admin.route(&quot;/&quot;)</div><div class="line">def index():</div><div class="line">    return &quot;&lt;h1 style:&apos;color:red&apos;&gt;this is admin!&lt;/h1&gt;&quot;</div></pre></td></tr></table></figure><blockquote><p>注册蓝图的时候，我们给了<code>admin</code>默认路由为<code>/admin</code>，这里写路由的时候就不用再写<code>/admin</code>了  </p></blockquote><ul><li><code>home</code>同上:  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Time    : 2018/1/6 15:01</div><div class="line"># @Author  : liwugang</div><div class="line"># @Email   : liwg@olei.me</div><div class="line"># @File    : views.py</div><div class="line"># @Software: PyCharm</div><div class="line"></div><div class="line">from . import home</div><div class="line"></div><div class="line"></div><div class="line">@home.route(&quot;/&quot;)</div><div class="line">def index():</div><div class="line">    return &quot;&lt;h1 style:&apos;color:green&apos;&gt;this is home!&lt;/h1&gt;&quot;</div></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><ul><li>入口函数为<code>manage.py</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Time    : 2018/1/6 14:58</div><div class="line"># @Author  : liwugang</div><div class="line"># @Email   : liwg@olei.me</div><div class="line"># @File    : manage.py</div><div class="line"># @Software: PyCharm</div><div class="line"># 入口函数</div><div class="line"></div><div class="line">from app import app</div><div class="line"></div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">    app.run()</div></pre></td></tr></table></figure><ul><li><code>python manage.py</code></li></ul><blockquote><p>访问<code>http://127.0.0.1:5000</code>，界面会显示绿色字体的<code>this is home!</code>  </p><p>访问<code>http://127.0.0.1:5000/admin</code>，界面会显示红色字体的<code>this is admin!</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前台为&lt;code&gt;home&lt;/code&gt;目录，后台为&lt;code&gt;admin&lt;/code&gt;目录  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;蓝图Blueprint&quot;&gt;&lt;a href=&quot;#蓝图Blueprint&quot; class=&quot;headerlink&quot; title=&quot;蓝图Blueprint&quot;&gt;&lt;/a&gt;蓝图&lt;code&gt;Blueprint&lt;/code&gt;&lt;/h3&gt;
    
    </summary>
    
    
      <category term="flask" scheme="http://blog.olei.me/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16.04国内apt源以及官方源</title>
    <link href="http://blog.olei.me/2018/01/20/ubuntu16-04%E5%9B%BD%E5%86%85apt%E6%BA%90%E4%BB%A5%E5%8F%8A%E5%AE%98%E6%96%B9%E6%BA%90/"/>
    <id>http://blog.olei.me/2018/01/20/ubuntu16-04国内apt源以及官方源/</id>
    <published>2018-01-20T09:34:37.000Z</published>
    <updated>2018-01-20T09:37:57.955Z</updated>
    
    <content type="html"><![CDATA[<h3 id="腾讯云源"><a href="#腾讯云源" class="headerlink" title="腾讯云源"></a>腾讯云源</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.tencentyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb http://mirrors.tencentyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb http://mirrors.tencentyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">#deb http://mirrors.tencentyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">#deb http://mirrors.tencentyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tencentyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tencentyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tencentyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">#deb-src http://mirrors.tencentyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">#deb-src http://mirrors.tencentyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure><h3 id="京东云源"><a href="#京东云源" class="headerlink" title="京东云源"></a>京东云源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial main restricted</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-updates main restricted</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial universe</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-updates universe</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial multiverse</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-updates multiverse</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-security main restricted</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-security universe</div><div class="line">deb http://mirrors.jcloudcs.com/ubuntu/ xenial-security multiverse</div><div class="line"># deb-src [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial stable</div><div class="line"># deb-src [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial stable</div></pre></td></tr></table></figure><h3 id="阿里云源"><a href="#阿里云源" class="headerlink" title="阿里云源"></a>阿里云源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</div><div class="line">deb http://archive.canonical.com/ubuntu xenial partner</div><div class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</div></pre></td></tr></table></figure><h3 id="官方源（国内不建议使用）"><a href="#官方源（国内不建议使用）" class="headerlink" title="官方源（国内不建议使用）"></a>官方源（国内不建议使用）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">#deb cdrom:[Ubuntu 16.04.1 LTS _Xenial Xerus_ - Release amd64 (20160719)]/ xenial main restricted</div><div class="line"></div><div class="line"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</div><div class="line"># newer versions of the distribution.</div><div class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted</div><div class="line"># deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted</div><div class="line"></div><div class="line">## Major bug fix updates produced after the final release of the</div><div class="line">## distribution.</div><div class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates main restricted</div><div class="line"># deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial-updates main restricted</div><div class="line"></div><div class="line">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</div><div class="line">## team, and may not be under a free licence. Please satisfy yourself as to</div><div class="line">## your rights to use the software. Also, please note that software in</div><div class="line">## universe WILL NOT receive any review or updates from the Ubuntu security</div><div class="line">## team.</div><div class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial universe</div><div class="line"># deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial universe</div><div class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates universe</div><div class="line"># deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial-updates universe</div></pre></td></tr></table></figure><blockquote><p>更换完毕记得一条命令:<code>apt-get update</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;腾讯云源&quot;&gt;&lt;a href=&quot;#腾讯云源&quot; class=&quot;headerlink&quot; title=&quot;腾讯云源&quot;&gt;&lt;/a&gt;腾讯云源&lt;/h3&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://blog.olei.me/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>zsh以及oh my zsh搭配终端主题</title>
    <link href="http://blog.olei.me/2018/01/18/zsh%E4%BB%A5%E5%8F%8Aoh-my-zsh%E6%90%AD%E9%85%8D%E7%BB%88%E7%AB%AF%E4%B8%BB%E9%A2%98/"/>
    <id>http://blog.olei.me/2018/01/18/zsh以及oh-my-zsh搭配终端主题/</id>
    <published>2018-01-18T02:21:40.000Z</published>
    <updated>2018-01-18T03:07:31.409Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装<code>zsh</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ apt-get update</div><div class="line">$ apt-get install zsh</div></pre></td></tr></table></figure><a id="more"></a><h3 id="选择sh为zsh"><a href="#选择sh为zsh" class="headerlink" title="选择sh为zsh"></a>选择<code>sh</code>为<code>zsh</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chsh -s /usr/bin/zsh</div></pre></td></tr></table></figure><blockquote><p>默认为<code>bash</code>，完毕之后退出终端重新进入  </p></blockquote><h3 id="下载oh-my-zsh"><a href="#下载oh-my-zsh" class="headerlink" title="下载oh my zsh"></a>下载<code>oh my zsh</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure><ul><li>默认的主题如下:<br><img src="https://resources.olei.me/moren.png" alt="默认"></li><li>更改主题  <blockquote><p>编辑根目录下的<code>.zshrc</code>文件  </p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim ~/.zshrc</div></pre></td></tr></table></figure><ul><li>更改<code>ZSH_THEME=&quot;robbyrussell&quot;</code>中引号的内容为<code>&quot;ys&quot;</code>，然后退出终端登录，效果如下:<br><img src="https://resources.olei.me/ys.png" alt="ys"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装zsh&quot;&gt;&lt;a href=&quot;#安装zsh&quot; class=&quot;headerlink&quot; title=&quot;安装zsh&quot;&gt;&lt;/a&gt;安装&lt;code&gt;zsh&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install zsh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="zsh" scheme="http://blog.olei.me/tags/zsh/"/>
    
  </entry>
  
  <entry>
    <title>openvpn的搭建、使用以及设置分配用户密码</title>
    <link href="http://blog.olei.me/2018/01/15/openvpn%E7%9A%84%E6%90%AD%E5%BB%BA%E3%80%81%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8A%E8%AE%BE%E7%BD%AE%E5%88%86%E9%85%8D%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/"/>
    <id>http://blog.olei.me/2018/01/15/openvpn的搭建、使用以及设置分配用户密码/</id>
    <published>2018-01-15T08:56:33.000Z</published>
    <updated>2018-01-16T02:59:38.472Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以<code>ubuntu</code>系统为例  </p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo su</div><div class="line">$ apt-get update</div><div class="line">$ apt-get install openvpn easy-rsa</div></pre></td></tr></table></figure><blockquote><p><code>easy-rsa</code>为证书生成软件<br><a id="more"></a></p><h3 id="证书制作"><a href="#证书制作" class="headerlink" title="证书制作"></a>证书制作</h3></blockquote><ul><li><p>创建默认证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ make-cadir /etc/openvpn/ca</div><div class="line">$ cd /etc/openvpn/ca</div></pre></td></tr></table></figure></li><li><p>更改证书默认设置</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim vars</div></pre></td></tr></table></figure><ul><li>更改证书的如下内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">export KEY_COUNTRY=&quot;US&quot;</div><div class="line">export KEY_PROVINCE=&quot;CA&quot;</div><div class="line">export KEY_CITY=&quot;SanFrancisco&quot;</div><div class="line">export KEY_ORG=&quot;Fort-Funston&quot;</div><div class="line">export KEY_EMAIL=&quot;me@myhost.mydomain&quot;</div><div class="line">export KEY_OU=&quot;MyOrganizationalUnit&quot;</div></pre></td></tr></table></figure><ul><li>有一个<code>KEY_NAME</code>,值可自定义，例如<code>server</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export KEY_NAME=&quot;server&quot;</div></pre></td></tr></table></figure><ul><li>保存生效</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source vars</div></pre></td></tr></table></figure><ul><li><code>CA</code>证书<blockquote><p>CA数字证书认证机构,负责颁发证书，用于openvpn服务器和客户端的认证  </p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ./clean-all</div><div class="line">$ ./build-ca</div></pre></td></tr></table></figure><blockquote><p><code>./build-ca</code> 后一直回车确认，或者<code>./build-ca --batch</code>保持默认设置，无须回车确认 之后证书的制作命令，直接按照添加<code>--batch</code>执行，也可不添加，不再单独说明  </p></blockquote><ul><li>服务器证书</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./build-key-server --batch server</div></pre></td></tr></table></figure><blockquote><p><code>server</code>为之前vars里<code>export KEY_NAME=&quot;server&quot;</code>的值 自定义server或者其他时后面需要在服务器配置文件中 client名称可自定义,如果修改最后在客户端配置文件中，需更改对应:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cert server.crt</div><div class="line">key server.key</div></pre></td></tr></table></figure><blockquote><p>作为修改之后的证书  </p></blockquote><ul><li>制作<code>Diffie-Hellman key</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./build-dh</div></pre></td></tr></table></figure><ul><li>生成HMAC签名加强TLS认证</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ openvpn --genkey --secret keys/ta.key</div></pre></td></tr></table></figure><ul><li>客户端证书</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./build-key --batch client</div></pre></td></tr></table></figure><blockquote><p><code>client</code>名称可自定义,如果修改最后在客户端配置文件中，更改对应  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cert client.crt</div><div class="line">key client.key</div></pre></td></tr></table></figure><h3 id="openvpn服务器配置"><a href="#openvpn服务器配置" class="headerlink" title="openvpn服务器配置"></a><code>openvpn</code>服务器配置</h3><ul><li>移动证书  <blockquote><p>进入<code>keys</code>目录可以看到生成的证书文件 我们需要ca.crt ca.key server.crt server.key ta.key dh2048.pem <code>server</code>为之前自定义的服务器证书名</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># cd keys/</div><div class="line"># ls -l</div><div class="line">total 92</div><div class="line">drwx------ 2 root root 4096 Sep 26 20:18 ./</div><div class="line">drwx------ 3 root root 4096 Sep 26 20:10 ../</div><div class="line">-rw-r--r-- 1 root root 5685 Sep 26 20:15 01.pem</div><div class="line">-rw-r--r-- 1 root root 5578 Sep 26 20:18 02.pem</div><div class="line">-rw-r--r-- 1 root root 1801 Sep 26 20:12 ca.crt</div><div class="line">-rw------- 1 root root 1704 Sep 26 20:12 ca.key</div><div class="line">-rw-r--r-- 1 root root 5578 Sep 26 20:18 client.crt</div><div class="line">-rw-r--r-- 1 root root 1094 Sep 26 20:18 client.csr</div><div class="line">-rw------- 1 root root 1708 Sep 26 20:18 client.key</div><div class="line">-rw-r--r-- 1 root root  424 Sep 26 20:17 dh2048.pem</div><div class="line">-rw-r--r-- 1 root root  287 Sep 26 20:18 index.txt</div><div class="line">-rw-r--r-- 1 root root   21 Sep 26 20:18 index.txt.attr</div><div class="line">-rw-r--r-- 1 root root   21 Sep 26 20:15 index.txt.attr.old</div><div class="line">-rw-r--r-- 1 root root  142 Sep 26 20:15 index.txt.old</div><div class="line">-rw-r--r-- 1 root root    3 Sep 26 20:18 serial</div><div class="line">-rw-r--r-- 1 root root    3 Sep 26 20:15 serial.old</div><div class="line">-rw------- 1 root root  636 Sep 26 20:37 ta.key</div><div class="line">-rw-r--r-- 1 root root 5685 Sep 26 20:15 server.crt</div><div class="line">-rw-r--r-- 1 root root 1090 Sep 26 20:15 server.csr</div><div class="line">-rw------- 1 root root 1704 Sep 26 20:15 server.key</div></pre></td></tr></table></figure><blockquote><p>复制证书文件到<code>/etc/openvpn</code> 当前目录是<code>/etc/openvpn/ca/keys</code>，所以<code>../../</code>就是配置目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp ca.crt ca.key server.crt server.key ta.key dh2048.pem ../../</div></pre></td></tr></table></figure><ul><li>修改配置文件<blockquote><p>复制配置文件模板到/etc/openvpn/,解压后修改</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd ../../</div><div class="line">cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz .</div><div class="line">gzip -d server.conf.gz</div><div class="line">vim server.conf</div></pre></td></tr></table></figure><blockquote><p>以下内容替换为证书的路径名称，同路径下可直接写名称</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ca ca.crt</div><div class="line">cert server.crt</div><div class="line">key server.key </div><div class="line">dh dh2048.pem</div></pre></td></tr></table></figure><blockquote><p>服务器证书一开始就命名为server默认值，后面就不用修改了<br>取消下面的注释（删掉；）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">;push &quot;redirect-gateway def1 bypass-dhcp&quot;</div><div class="line">;push &quot;dhcp-option DNS 208.67.222.222&quot;</div><div class="line">;push &quot;dhcp-option DNS 208.67.220.220&quot;</div><div class="line">;user nobody</div><div class="line">;group nogroup</div></pre></td></tr></table></figure><blockquote><p>路由器作为client的话设置的话，<code>DNS</code>那里两行仍然是一个注释<br>去掉下面的注释，并再下一行添加<code>key-direction 0</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">;tls-auth ta.key 0 # This file is secret</div></pre></td></tr></table></figure><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><blockquote><p>我们使用云服务商的服务器，千万不要自己设置防火墙，我们做一个<code>iptables</code>  </p><ul><li>打开<code>ip</code>转发<br>修改<code>/etc/sysctl.conf</code></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/sysctl.conf</div></pre></td></tr></table></figure><blockquote><p>取消注释</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net.ipv4.ip_forward=1</div></pre></td></tr></table></figure><blockquote><p>生效</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure><ul><li>`iptables·设置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE</div><div class="line">$ iptables-save &gt; /etc/openvpn-rule</div><div class="line">$ cd /etc/</div><div class="line">$ iptables-restore &lt; openvpn-rule</div></pre></td></tr></table></figure><h3 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl start openvpn@server</div><div class="line">$ systemctl enable openvpn@server</div></pre></td></tr></table></figure><h3 id="客户端文件制作"><a href="#客户端文件制作" class="headerlink" title="客户端文件制作"></a>客户端文件制作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/openvpn/ca/keys</div><div class="line">$ cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf .</div></pre></td></tr></table></figure><ul><li>编辑<code>client.conf</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">;local a.b.c.d</div><div class="line">remote my-server-1 1194</div><div class="line">;user nobody</div><div class="line">;group nogroup</div></pre></td></tr></table></figure><blockquote><p>去掉里面的<code>;</code>，第一个<code>local</code>后面设置为<code>0.0.0.0</code>,第二句的<code>my-server-1</code>换为<code>server</code>端的<code>ip</code>或者自己绑定的域名<br>删掉分号:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">;tls-auth ta.key 1</div></pre></td></tr></table></figure><blockquote><p>并在下一行添加</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">key-direction 1</div></pre></td></tr></table></figure><ul><li>为了简单，客户端导入的文件我们就只用一个.ovpn的文件,在服务端的<code>ubuntu</code>运行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd</div><div class="line">$ mkdir /client/ovpn</div><div class="line">$ cat /etc/openvpn/ca/keys/client.conf &lt;(echo -e &apos;&lt;ca&gt;&apos;) /etc/openvpn/ca/keys/ca.crt &lt;(echo -e &apos;&lt;/ca&gt;\n&lt;cert&gt;&apos;) /etc/openvpn/ca/keys/client.crt &lt;(echo -e &apos;&lt;/cert&gt;\n&lt;key&gt;&apos;) /etc/openvpn/ca/keys/client.key &lt;(echo -e &apos;&lt;/key&gt;\n&lt;tls-auth&gt;&apos;) /etc/openvpn/ca/keys/ta.key &lt;(echo -e &apos;&lt;/tls-auth&gt;&apos;) &gt; ~/client/ovpn/client.ovpn</div></pre></td></tr></table></figure><ul><li>将<code>client.ovpn</code>更改:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ca ca.crt</div><div class="line">cert client.crt</div><div class="line">key client.key</div><div class="line">tls-auth ta.key 1</div></pre></td></tr></table></figure><p>为：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ca [inline]</div><div class="line">cert [inline]</div><div class="line">key [inline]</div><div class="line">tls-auth [inline] 1</div></pre></td></tr></table></figure><ul><li>进入<code>/client/ovpn</code>目录，将 <code>client.ovpn</code>给复制出来，直接复制内容或者用<code>scp</code>等，文件一定是<code>.ovpn</code>结尾的形式 </li></ul><h3 id="测试工具推荐："><a href="#测试工具推荐：" class="headerlink" title="测试工具推荐："></a>测试工具推荐：</h3><ul><li><code>mac</code>：<br><a href="https://tunnelblick.net" target="_blank" rel="external">tunnelblick</a></li><li><code>windows</code>:<br><a href="https://openvpn.net/index.php/open-source/downloads.html" target="_blank" rel="external">openvpn gui</a></li></ul><h3 id="账号密码分配"><a href="#账号密码分配" class="headerlink" title="账号密码分配"></a>账号密码分配</h3><ul><li>服务端的<code>server.conf</code>配置:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/openvpn/server.conf</div></pre></td></tr></table></figure><p>追加：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># use username and password login</div><div class="line">auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env</div><div class="line">client-cert-not-required</div><div class="line">username-as-common-name</div><div class="line">script-security 3 execve</div></pre></td></tr></table></figure><ul><li><code>/etc/openvpn/checkpsw.sh</code>内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">###########################################################</div><div class="line"># checkpsw.sh (C) 2004 Mathias Sundman &lt;mathias@openvpn.se&gt;</div><div class="line">#</div><div class="line"># This script will authenticate OpenVPN users against</div><div class="line"># a plain text file. The passfile should simply contain</div><div class="line"># one row per user with the username first followed by</div><div class="line"># one or more space(s) or tab(s) and then the password.</div><div class="line"></div><div class="line">PASSFILE=&quot;/etc/openvpn/psw-file&quot;</div><div class="line">LOG_FILE=&quot;/etc/openvpn/openvpn-password.log&quot;</div><div class="line">TIME_STAMP=`date &quot;+%Y-%m-%d %T&quot;`</div><div class="line"></div><div class="line">###########################################################</div><div class="line"></div><div class="line">if [ ! -r &quot;$&#123;PASSFILE&#125;&quot; ]; then</div><div class="line">  echo &quot;$&#123;TIME_STAMP&#125;: Could not open password file \&quot;$&#123;PASSFILE&#125;\&quot; for reading.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</div><div class="line">  exit 1</div><div class="line">fi</div><div class="line"></div><div class="line">CORRECT_PASSWORD=`awk &apos;!/^;/&amp;&amp;!/^#/&amp;&amp;$1==&quot;&apos;$&#123;username&#125;&apos;&quot;&#123;print $2;exit&#125;&apos; $&#123;PASSFILE&#125;`</div><div class="line"></div><div class="line">if [ &quot;$&#123;CORRECT_PASSWORD&#125;&quot; = &quot;&quot; ]; then </div><div class="line">  echo &quot;$&#123;TIME_STAMP&#125;: User does not exist: username=\&quot;$&#123;username&#125;\&quot;, password=\&quot;$&#123;password&#125;\&quot;.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</div><div class="line">  exit 1</div><div class="line">fi</div><div class="line"></div><div class="line">if [ &quot;$&#123;password&#125;&quot; = &quot;$&#123;CORRECT_PASSWORD&#125;&quot; ]; then </div><div class="line">  echo &quot;$&#123;TIME_STAMP&#125;: Successful authentication: username=\&quot;$&#123;username&#125;\&quot;.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</div><div class="line">  exit 0</div><div class="line">fi</div><div class="line"></div><div class="line">echo &quot;$&#123;TIME_STAMP&#125;: Incorrect password: username=\&quot;$&#123;username&#125;\&quot;, password=\&quot;$&#123;password&#125;\&quot;.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</div><div class="line">exit 1</div></pre></td></tr></table></figure><ul><li>配置账号密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/openvpn</div><div class="line">$ vim psw-file</div></pre></td></tr></table></figure><p>形式如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xu3352 123456@</div></pre></td></tr></table></figure><blockquote><p>表示账号密码，一行一个，账号密码空格分开</p><ul><li>重启<code>openvpn</code></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/openvpn restart</div></pre></td></tr></table></figure><ul><li>最后一步，客户端的文件<code>client.ovpn</code><br>新添加：  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">auth-user-pass</div></pre></td></tr></table></figure><hr><blockquote><p>修改之后，客户端文件需要重新导入到本地<code>openvpn</code>工具中</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;以&lt;code&gt;ubuntu&lt;/code&gt;系统为例  &lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo su&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install openvpn easy-rsa&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;easy-rsa&lt;/code&gt;为证书生成软件&lt;br&gt;
    
    </summary>
    
    
      <category term="openvpn" scheme="http://blog.olei.me/tags/openvpn/"/>
    
  </entry>
  
  <entry>
    <title>clickhouse初学</title>
    <link href="http://blog.olei.me/2018/01/11/clickhouse%E5%88%9D%E5%AD%A6/"/>
    <id>http://blog.olei.me/2018/01/11/clickhouse初学/</id>
    <published>2018-01-11T09:46:25.000Z</published>
    <updated>2018-01-16T03:00:03.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="clickhouse"><a href="#clickhouse" class="headerlink" title="clickhouse"></a>clickhouse</h2><p>   <a href="">https://clickhouse.yandex/tutorial.html</a>  快速搭建集群参考 </p><p>   <a href="">https://clickhouse.yandex/reference_en.html </a> 官网文档</p><p>   <a href="">https://habrahabr.ru/company/smi2/blog/317682/</a> 关于集群配置参考  </p><h3 id="Clickhouse-基本介绍"><a href="#Clickhouse-基本介绍" class="headerlink" title="Clickhouse  基本介绍"></a>Clickhouse  基本介绍</h3><pre><code>Clickhouse 是属于OLAP(联机分析处理)开源的列存储数据管理系统。</code></pre><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><pre><code>可以线性扩展简单，方便 高度可靠的 容错(支持多主机异步复制，可以跨多个数据中心部署，单个节点或整个数据中心的停机时间不会影响系统的读写可用性)</code></pre><a id="more"></a><h4 id="功能及应用介绍"><a href="#功能及应用介绍" class="headerlink" title="功能及应用介绍"></a>功能及应用介绍</h4><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:center">应用</th></tr></thead><tbody><tr><td style="text-align:left">深度列存储</td><td style="text-align:center">Web  app 分析</td></tr><tr><td style="text-align:left">向量化查询执行(vectorized query  execution)</td><td style="text-align:center">广告网络和实时出价</td></tr><tr><td style="text-align:left">数据压缩</td><td style="text-align:center">电信</td></tr><tr><td style="text-align:left">并行和分布式查询</td><td style="text-align:center">信息安全</td></tr><tr><td style="text-align:left">实时数据注入</td><td style="text-align:center">监测和遥测</td></tr></tbody></table><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><pre><code>1.    不支持事务2.    没有update 和delete 3.    支持的操作系统有限(只支持ubuntu)</code></pre><h3 id="Clickhouse-安装部署"><a href="#Clickhouse-安装部署" class="headerlink" title="Clickhouse 安装部署"></a>Clickhouse 安装部署</h3><pre><code>1.    环境准备三台4c8G，分别为10.39.1.36，10.39.1.37，10.39.1.40 ubuntu 14.04.x86x64 2.    安装sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4 sudo mkdir -p /etc/apt/sources.list.decho &quot;deb http://repo.yandex.ru/clickhouse/trusty stable main&quot; |sudo tee /etc/apt/sources.list.d/clickhouse.listsudo apt-get updatesudo apt-get install clickhouse-server-common clickhouse-client  sudo service clickhouse-server start  单机版本就可以直接启动使用了。</code></pre><h4 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h4><pre><code>ClickHouse deployment to clusterClickHouse cluster is a homogenous cluster. Steps to set up1. Install ClickHouse server on all machines of the cluster2. Set up cluster configs in configuration file3. Create local tables on each instance4. Create a Distributed table  clickhouse-client 客户端软件，集群的安装的可以选择，  clickhouse-server-common 服务端软件，必须安装  clickhouse-compressor    数据压缩软件，集群的话必须安装</code></pre><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><pre><code>/etc/clickhouse-server/ config.xml 配置文件 users.xml 用户权限配置文件 分布式查询集群或者复制需要单独创建一个新的文件 touch  /etc/metrika.xml   (可以参考) </code></pre><p><a href="">https://clickhouse.yandex/reference_en.html#External dictionaries </a><br><a href="">https://clickhouse.yandex/reference_en.html#Data%20replication </a> </p><pre><code> 分布式集群配置 vim /etc/metrika.xml  &lt;yandex&gt;   &lt;clickhouse_remote_servers&gt;&lt;enncloud&gt;    &lt;shard&gt;        &lt;weight&gt;1&lt;/weight&gt;        &lt;internal_replication&gt;false&lt;/internal_replication&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse01&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;        &lt;/replica&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse02&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;        &lt;/replica&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse03&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;        &lt;/replica&gt;    &lt;/shard&gt;    &lt;shard&gt;        &lt;weight&gt;3&lt;/weight&gt;        &lt;internal_replication&gt;false&lt;/internal_replication&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse01&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;        &lt;/replica&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse02&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;        &lt;/replica&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse03&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;        &lt;/replica&gt;    &lt;/shard&gt;&lt;/enncloud&gt;&lt;/clickhouse_remote_servers&gt;&lt;networks&gt;  &lt;ip&gt;::/0&lt;/ip&gt; &lt;/networks&gt; &lt;clickhouse_compression&gt;   &lt;min_part_size&gt;10000000000&lt;/min_part_size&gt;   &lt;min_part_size_ratio&gt;0.01&lt;/min_part_size_ratio&gt;   &lt;method&gt;lz4&lt;/method&gt;&lt;/clickhouse_compression&gt;&lt;/yandex&gt;关于&lt;internal_replication&gt;false&lt;/internal_replication&gt; false 和true 的设置的区别如果设置为true，则写操作将选择第一个健康副本并将数据写入它。如果分布式表”查看”复制表，则使用此选项，换句话说，如果将写入数据的将复制它们本身。  如果设置为false(默认值) 则将数据写入所有副本。这意味着分布式表复制数据本身，这比使用复制更槽糕，因为没有检查副本的一致性，并且随着时间的推移它们会包含稍微不同的数据。关闭一台机器，其他机器还是分布式查询。测试：  在所有的节点上创建test 表 CREATE TABLE test (FlightDate Date,Year UInt16) ENGINE = MergeTree(FlightDate,   (Year, FlightDate), 8192); 创建分布式表并且关联本地表 CREATE TABLE test_all AS test ENGINE = Distributed(enncloud, default, test, rand())往分布式表插入数据，然后在其他节点查询insert into test_all (FlightDate,Year)values(&apos;2013-10-12&apos;,2013);可以抓包查询是否是分布式查询  tcpdump -i any -s 0 -l -w - dst port 9000  4.    复制的配置   &lt;yandex&gt;   &lt;clickhouse_remote_servers&gt;  &lt;perftest_1shards_3replicas&gt;    &lt;shard&gt;        &lt;replica&gt;            &lt;host&gt;clickhouse01&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;         &lt;/replica&gt;         &lt;replica&gt;            &lt;host&gt;clickhouse02&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;         &lt;/replica&gt;         &lt;replica&gt;            &lt;host&gt;clickhouse03&lt;/host&gt;            &lt;port&gt;9000&lt;/port&gt;         &lt;/replica&gt;    &lt;/shard&gt;   &lt;/perftest_1shards_3replicas&gt; &lt;/clickhouse_remote_servers&gt;&lt;macros&gt;   &lt;shard&gt;02&lt;/shard&gt;   &lt;replica&gt;10.39.1.36&lt;/replica&gt;&lt;/macros&gt;&lt;networks&gt;   &lt;ip&gt;::/0&lt;/ip&gt;&lt;/networks&gt;&lt;clickhouse_compression&gt;   &lt;min_part_size&gt;10000000000&lt;/min_part_size&gt;   &lt;min_part_size_ratio&gt;0.01&lt;/min_part_size_ratio&gt;   &lt;method&gt;lz4&lt;/method&gt;&lt;/clickhouse_compression&gt;&lt;zookeeper-servers&gt;     &lt;node index=&quot;1&quot;&gt;        &lt;host&gt;10.39.1.36&lt;/host&gt;        &lt;port&gt;2181&lt;/port&gt;    &lt;/node&gt;&lt;/zookeeper-servers&gt;&lt;/yandex&gt;配置详解 shard 碎片标识符，&lt;replica&gt;10.39.1.36&lt;/replica&gt; 10.39.1.36 是标识符，可以看做是副本标识符，是独一无二的，每个节点的标识符为本机的ip，这样的话，三个节点的话，每个配置的副本标识符将为它自身的ip地址。 创建复制表CREATE TABLE ontime_replica (FlightDate Date,Year UInt16) ENGINE = ReplicatedMergeTree(&apos;/clickhouse_perftest/tables/ontime_replica&apos;,&apos;{replica}&apos;,FlightDate,(Year, FlightDate),8192);插入数据，在其他节点解析查询  </code></pre><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><pre><code>启用远程接口访问编辑 config.xml  &lt;listen_host&gt;::&lt;/listen_host&gt; 1.    HTTP  interface   默认情况下，clcikhouse 服务器在端口8123 监听HTTP。  URL 长度限制为16KB  如果成功，则返回响应码200  如果失败，则返回响应码500  使用http interface 接口创建表插入数据并删除表root@clickhouse01:~# echo &apos;CREATE TABLE abc (a UInt8) ENGINE = Memory&apos; | POST &apos;http://10.39.1.36:8123/&apos;root@clickhouse01:~# echo &apos;INSERT INTO abc VALUES (1),(2),(3)&apos; | POST &apos;http://10.39.1.36:8123/&apos;root@clickhouse01:~# echo &apos;(4),(5),(6)&apos; | POST &apos;http://10.39.1.36:8123/?query=INSERT INTO abc VALUES&apos; root@clickhouse01:~# echo &apos;(7),(8),(9)&apos; | POST &apos;http://10.39.1.36:8123/?query=INSERT INTO abc FORMAT Values&apos; 格式转换TabSeparated root@clickhouse01:~# echo -ne &apos;10\n11\n12\n&apos; | POST &apos;http://10.39.1.36:8123/?query=INSERT INTO abc FORMAT TabSeparated&apos;   查询的结果输出如下 root@clickhouse01:~# GET &apos;http://10.39.1.36:8123/?query=SELECT a FROM abc&apos; 1 2 3 10 11 12 7 8 9 4 5 6删除表echo &apos;DROP TABLE abc&apos; | POST &apos;http://10.39.1.36:8123/&apos;2.    JDBC driver    https://github.com/yandex/clickhouse-jdbc 3.    Third-party client libraries 4.    Command-line client</code></pre><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><pre><code> 系统中有两种类型的解析器：一个完整的SQL 解析器(一个递归下降解析器)和一个数据格式分析器（一个快速流分析器）。在所有情况下，除了插入查询，只有完整的SQL解析器使用。   创建数据库 CREATE DATABASE [IF NOT EXISTS] db_name  创建表   CREATE [TEMPORARY] TABLE [IF NOT EXISTS] [db.]name   (name1 [type1] [DEFAULT|MATERIALIZED|ALIAS expr1],name2 [type2] [DEFAULT|MATERIALIZED|ALIAS expr2],...  ) ENGINE = engine  创建视图  CREATE [MATERIALIZED] VIEW [IF NOT EXISTS] [db.]name [ENGINE = engine] [POPULATE] AS SELECT ...</code></pre><h4 id="表引擎"><a href="#表引擎" class="headerlink" title="表引擎"></a>表引擎</h4><pre><code>    建议使用来自MergeTree家族的存储引擎(LSM树)    表的存储引擎如下：1.    TinyLog  最简单的表引擎，它将数据存储在磁盘上，每列存储在单独的压缩文件中。写入时，数据会追加到文件的末尾。  并发数据访问不受任何限制：   如果您正在从表中读取并以相同的查询写入，读操作将会出现错误。  如果您同时在多个查询中写入表，数据将被破坏。  使用该表的典型方式是一次写入：首先只是写入一次数据，然后根据需要读取数据，查询在单个流中执行，该引擎是用于相对较小的表，（最多可推荐1,000,000行）  适合需要小表，不支持索引。  2.    Log Log 与Tinylog不同之处在于，一个小文件的“标记”驻留在列文件中。这些标记写在每个数据块上，并包含偏移量，在哪里开始读取文件以便跳过指定的行数。这使得可以在多个线程中读取表数据。对于并发数据访问，读取操作可以同时执行。 Log 引擎不支持索引。类似的，如果写入表失败，则表被损坏，从其读取返回错误，log引擎适用于临时数据，一次写入表以及测试或者演示目的。 3.    Memory  内存引擎将数据以未压缩格式存储在RAM 中。数据以读取时接收的格式完全相同的形式存储。并发数据访问同步，锁定很短：读写操作不会阻塞。不支持索引，阅读并行化。 4.    Merge  合并引擎不会自己存储数据，而是允许同时从任意数量的其他表读取数据。  读数据自动并行化。不支持写入表。读取时，使用实例读取的表的索引(如果存在)。合并引擎接受参数：数据库名称和表的正则表达式。例： Merge(hits, &apos;^WatchLog&apos;)  数据库将从“hits”数据库中的表读取，名称与正则表示‘^watchLlog’ 匹配。 而不是数据库名称，您可以使用返回字符串的常量表达式。例如，currentDatabaase().  正则表达式是re2(类似于PCRE)，区分大小写。 选择要读取的表时，即使与正则表达式匹配，也不会选择合并表本身。为了避免循环。 虚拟列虚拟列是由表引擎提供的列，而不考虑定义。（create table 中未指定，但他们对于select 是可以访问的）虚拟列与普通列的不同之处在于：它们没有在表定义中指定，无法使用insert 将数据添加到它们。当使用insert 而不指定列表时，虚拟列将被忽略。 合并表包含String类型的虚拟列_table。 （如果表已经有一个&apos;_table&apos;列，虚拟列名为&apos;_table1&apos;，如果它已经有&apos;_table1&apos;，它被命名为&apos;_table2&apos;，依此类推）。它包含表的名称从中读取数据。 如果WHERE或PREWHERE子句包含不依赖于其他表列（作为连接元素之一或整个表达式）的“_table”列的条件，则将这些条件用作索引。条件是对表名的数据集进行读取数据，读操作将仅从触发条件的那些表执行。5.    分布式引擎分布式引擎不存储数据本身，但允许在多个服务器上进行分布式查询处理。读数自动并行化。在读取期间，使用远程服务器的表索引。 分布式引擎接受参数：服务器器配置文件中的集群名称，远程数据库的名称，远程表的名称例子：   Distributed(logs, default, hits[, sharding_key])  数据将从“日志”集群中的所有服务器从集群中每个服务器上的”default。hits” 表中读取。数据不仅被读取，而且在远程服务器上进行部分处理(在可能的范围内)  例如，对于使用group by 的查询，数据将在远程服务器聚合，聚合函数的中间状态将发送到请求者服务器，那么数据将进一步汇总 集群将数据写入的两种方法：   1.    首先，你可以定义哪些服务器写入哪些数据，并直接在每个分片上执行写入。（在分片表”查看“的表中执行insert）这是最优的解决方案。因为数据可以完全独立写入不同的分片   2.    其次，你可以在分布式表中执行insert，在这种情况下，表将通过服务器本身分发插入的数据。  6.    MergeTree      Mergetree 是clickhouse 最近的表引擎，它支持主键索引和日期，并提供了可能性，实时更新数据。   Example without sampling support:   MergeTree(EventDate, (CounterID, EventDate), 8192)   Example with sampling support:   MergeTree(EventDate, intHash32(UserID), (CounterID, EventDate, intHash32(UserID)), 8192)   一个mergetree 型表必须有一个单独的列包含日期，在这个例子中，它是eventdate 的日期列的类型必须是日期。     7.    CollapsingMergeTree    该引擎与MergeTree 不同之处在于它允许自动删除，或者合并时“折叠”某些行对   例子：   CollapsingMergeTree(EventDate, (CounterID, EventDate, intHash32(UniqID), VisitID), 8192, Sign)   在这里sign 是一个列，old 值为-1，new 值为1   合并时，每组连续相同的主键值(用于排序数据的列)减少为不超过一行，列值为(sign_column=-1), 不超过一行，列值“sign_column=1”.(更改日志中的条目自己折叠)  8.    SummingMergeTree        该存储引擎与MergeTree 的不同之处在于它在合并时总计数据       SummingMergeTree(EventDate, (OrderID, EventDate, BannerID, ...), 8192)  9.    AggregatingMergeTree   它与MergreTree 不同之处在于，合并将存储在表中的聚合函数的状态组合为具有相同主键值的行。  例子： CREATE MATERIALIZED VIEW test.basic ENGINE = AggregatingMergeTree(StartDate, (CounterID, StartDate), 8192) AS SELECTCounterID,StartDate,sumState(Sign)    AS Visits,uniqState(UserID) AS UsersFROM test.visitsGROUP BY CounterID, StartDate; INSERT INTO test.visits ... SELECT    StartDate,    sumMerge(Visits) AS Visits,uniqMerge(Users) AS Users FROM test.basic GROUP BY StartDate ORDER BY StartDate;  10.    ReplacingMergeTree    它与MergeTree 不同之处在于，它可以在合并时通过主键重复数据删除数据   例子：   ReplacingMergeTree(EventDate, (OrderID, EventDate, BannerID, ...), 8192, ver)  11.    NULL     当写入null 表时，数据将被忽略，从null 表中读取，响应为空    但是，你可以在null表上创建实例视图，因为写入表的数据将在视图中显示 12.    View    用于实现视图，它不存储数据，而只存储指定的select 查询。从表读取时，它会运行此查询(并从表中删除所有不必要的列)   a)    MaterializedView      用于实现物化视图。对于存储数据，它使用在创建视图时指定的不同引擎。它只是使用这个引擎。13.    Set    始终在RAM的数据集。你可以使用insert 在表中插入数据。新元素将被添加到数据集中，而重复的元素将被忽略。   数据总是位于RAM中，对于insert，插入的数据块也会写入到磁盘上的表目录。当启动服务器时，这些数据被加载到RAM中。重启后，数据保持原样。 对于服务器重新启动，磁盘上的数据块可能会丢失或损坏。在后一种情况，你可能需要手动删除带有损坏数据的文件。 14.    Join   一个总是位于RAM 中的JOIN 数据结构   Join(ANY|ALL, LEFT|INNER, k1[, k2, ...]) 15.    Buffer   缓存数据写入RAM，定期将其刷新到另一个表。在读操作期间，数据从缓冲器和另一个表同时读取。   例子：   CREATE TABLE merge.hits_buffer AS merge.hits ENGINE = Buffer(merge, hits, 16, 10, 100, 10000, 1000000, 10000000, 100000000)  最大1.6GB 的内存消耗 16.    Data replication      ReplicatedMergeTree     ReplicatedCollapsingMergeTree     ReplicatedAggregatingMergeTree     ReplicatedSummingMergeTree     MergeTree 系列中的表仅支持复制。复制在单个表的级别上工作，而不是整个服务器。服务器可以同时存储复制表和非复制表。 </code></pre><h4 id="系统表"><a href="#系统表" class="headerlink" title="系统表"></a>系统表</h4><pre><code>system.databasessystem.tablessystem.processessystem.clusterscluster String      - Cluster name.shard_num UInt32    - Number of a shard in the cluster, starting from 1.shard_weight UInt32 - Relative weight of a shard when writing data.replica_num UInt32  - Number of a replica in the shard, starting from 1.host_name String    - Host name as specified in the config.host_address String - Host&apos;s IP address obtained from DNS.port UInt16         - The port used to access the server.user String         - The username to use for connecting to the server.system.mergessystem.settingssystem.zookeeper</code></pre><h4 id="表函数"><a href="#表函数" class="headerlink" title="表函数"></a>表函数</h4><pre><code>1.    merge 2.    remote </code></pre><h4 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h4><pre><code>TabSeparated TabSeparatedWithNames TabSeparatedWithNamesAndTypesTabSeparatedRawBlockTabSeparatedCSVCSVWithNamesRowBinaryPrettyPrettyCompactPrettyCompactMonoBlockPrettySpacePrettyNoEscapesPrettyCompactNoEscapesPrettySpaceNoEscapesVerticalValuesJSONJSONCompactJSONEachRowTSKVXMLNull</code></pre><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><pre><code>1.    整数  UInt8, UInt16, UInt32, UInt64, Int8, Int16, Int32, Int642.    浮点数  Float32, Float64 3.    字符串    任意长度的字符串，长度不限于此，该值可以包含任意字节集，包括空字节。字符串类型替换其他DBMS中类型varchar，blob，clob 和其他类型。   Cliclhouse 没有编码的概念，建议使用UTF-8编码， 4.    FixedString(N)    N字节固定长度字符串，N必须是严格正数的自然数。 5.    Date   日期存储没有时区，最小值输出为0000-00-00 6.    DateTime   允许将值与日期类型保存在相同的范围，最小输出为 0000-00-00 00:00:00 7.    枚举   Enum8 or Enum168.    Array(T)   不建议使用多维数组，不被很好的支持9.    元组   Tuple(T1, T2, ...)10.    嵌套的数据结构    Nested(Name1 Type1, Name2 Type2, ...) 11.    聚合函数   AggregateFunction(name, types_of_arguments...) </code></pre><p>   <a href=""> https://clickhouse.yandex/reference_en.html#AggregatingMergeTree </a> </p><pre><code>12.    特殊的数据类型  特殊的数据类型值无法保存到结果中的表输出，而是用作运行查询的中间结果。 13.    set 14.    Boolean values      使用uint8 类型限制的值0 和值 1 </code></pre><h4 id="分布式数据查询"><a href="#分布式数据查询" class="headerlink" title="分布式数据查询"></a>分布式数据查询</h4><pre><code>10.1 分布式集群测试  查询集群状态  select * from system.clusters 使用官网的测试数据</code></pre><p><a href="">https://raw.githubusercontent.com/yandex/ClickHouse/master/doc/example_datasets/1_ontime.txt </a> </p><pre><code> CREATE TABLE a_test  (Year UInt16, Quarter UInt8, Month UInt8, DayofMonth UInt8, DayOfWeek UInt8, FlightDate Date, UniqueCarrier FixedString(7), AirlineID Int32, Carrier FixedString(2), TailNum String, FlightNum String, OriginAirportID Int32, OriginAirportSeqID Int32, OriginCityMarketID Int32, Origin FixedString(5), OriginCityName String, OriginState FixedString(2), OriginStateFips String, OriginStateName String, OriginWac Int32, DestAirportID Int32, DestAirportSeqID Int32, DestCityMarketID Int32, Dest FixedString(5), DestCityName String, DestState FixedString(2), DestStateFips String, DestStateName String, DestWac Int32, CRSDepTime Int32, DepTime Int32, DepDelay Int32, DepDelayMinutes Int32, DepDel15 Int32, DepartureDelayGroups String, DepTimeBlk String, TaxiOut Int32, WheelsOff Int32, WheelsOn Int32, TaxiIn Int32, CRSArrTime Int32, ArrTime Int32, ArrDelay Int32, ArrDelayMinutes Int32, ArrDel15 Int32, ArrivalDelayGroups Int32, ArrTimeBlk String, Cancelled UInt8, CancellationCode FixedString(1), Diverted UInt8, CRSElapsedTime Int32, ActualElapsedTime Int32, AirTime Int32, Flights Int32, Distance Int32, DistanceGroup UInt8, CarrierDelay Int32, WeatherDelay Int32, NASDelay Int32, SecurityDelay Int32, LateAircraftDelay Int32, FirstDepTime String, TotalAddGTime String, LongestAddGTime String, DivAirportLandings String, DivReachedDest String, DivActualElapsedTime String, DivArrDelay String, DivDistance String, Div1Airport String, Div1AirportID Int32, Div1AirportSeqID Int32, Div1WheelsOn String, Div1TotalGTime String, Div1LongestGTime String, Div1WheelsOff String, Div1TailNum String, Div2Airport String, Div2AirportID Int32, Div2AirportSeqID Int32, Div2WheelsOn String, Div2TotalGTime String, Div2LongestGTime String, Div2WheelsOff String, Div2TailNum String, Div3Airport String, Div3AirportID Int32, Div3AirportSeqID Int32, Div3WheelsOn String, Div3TotalGTime String, Div3LongestGTime String, Div3WheelsOff String, Div3TailNum String, Div4Airport String, Div4AirportID Int32, Div4AirportSeqID Int32, Div4WheelsOn String, Div4TotalGTime String, Div4LongestGTime String, Div4WheelsOff String, Div4TailNum String, Div5Airport String, Div5AirportID Int32, Div5AirportSeqID Int32, Div5WheelsOn String, Div5TotalGTime String, Div5LongestGTime String, Div5WheelsOff String, Div5TailNum String ) ENGINE = MergeTree(FlightDate, (Year, FlightDate), 8192)2. 创建分布式关联表   CREATE TABLE a_all AS  a_test  ENGINE = Distributed(perftest_1shards_3replicas, default, a_test, rand());  3.创建表和分布式关联表都需要在每个节点执行。 4. 插入数据到分布式表，在其他节点查询    下载的数据导入到a_all 表中   for i in *.zip; do echo $i; unzip -cq $i &apos;*.csv&apos; | sed &apos;s/\.00//g&apos; | clickhouse-client --host=clickhouse01 --query=&quot;INSERT INTO a_all   FORMAT CSVWithNames&quot;; done 在其他节点上查询并且监测是不是分布式    抓包      tcpdump -i any -s 0 -l -w - dst port 9000  1. 查询总的数据          select count(*) from a_all;2. 查询1987-1991年每天的航班统计 SELECT DayOfWeek, count(*) AS c FROM a_all WHERE Year &gt;= 1987 AND Year &lt;= 1991 GROUP BY DayOfWeek ORDER BY c DESC;3. 查询延误在一个小时以上出发的城市 SELECT OriginCityName, count() AS c, avg(DepDelay &gt;  60) AS delays FROM a_all GROUP BY OriginCityName HAVING c &gt;  100000 ORDER BY delays DESC LIMIT 204. 查询1991 年最后欢迎的目的地  SELECT     OriginCityName,     DestCityName,     count(*) AS flights,     bar(flights, 0, 20000, 40) FROM ontime_all WHERE Year = 1991 GROUP BY OriginCityName, DestCityName ORDER BY flights DESC LIMIT 20SELECT     OriginCityName &lt; DestCityName ? OriginCityName : DestCityName AS a,     OriginCityName &lt; DestCityName ? DestCityName : OriginCityName AS b,     count(*) AS flights,     bar(flights, 0, 40000, 40) FROM a_all WHERE Year =  1991 GROUP BY a, b ORDER BY flights DESC LIMIT 205. 最受欢迎的出发城市    SELECT OriginCityName, count(*) AS flights FROM a_all GROUP BY OriginCityName ORDER BY flights DESC LIMIT 20  6. 创建array   join       允许使用数组或嵌套数据结构执行join。   CREATE TABLE arrays_test (s String, arr Array(UInt8)) ENGINE = Memory   INSERT INTO arrays_test VALUES (&apos;Hello&apos;, [1,2]), (&apos;World&apos;, [3,4,5]), (&apos;Goodbye&apos;, [])   SELECT * FROM arrays_test   SELECT s, arr FROM arrays_test ARRAY JOIN arr   SELECT s, arr, a FROM arrays_test ARRAY JOIN arr AS a   SELECT s, arr, a, num, mapped FROM arrays_test ARRAY JOIN arr AS a, arrayEnumerate(arr) AS num, arrayMap(x -&gt; x + 1, arr) AS mapped 数组联接也与嵌套的数据结构一起工作，例子  CREATE TABLE nested_test (s String, nest Nested(x UInt8, y UInt32)) ENGINE = Memory   INSERT INTO nested_test VALUES (&apos;Hello&apos;, [1,2], [10,20]), (&apos;World&apos;, [3,4,5], [30,40,50]), (&apos;Goodbye&apos;, [], [])SELECT * FROM nested_test SELECT s, nest.x, nest.y FROM nested_test ARRAY JOIN nest SELECT s, nest.x, nest.y FROM nested_test ARRAY JOIN nest.x, nest.y SELECT s, nest.x, nest.y FROM nested_test ARRAY JOIN nest.x 使用arrayEnumerate 函数  SELECT s, n.x, n.y, nest.x, nest.y, num FROM nested_test ARRAY JOIN nest AS n, arrayEnumerate(nest.x) AS num</code></pre><h4 id="集群复制"><a href="#集群复制" class="headerlink" title="集群复制"></a>集群复制</h4><pre><code>创建复制表：     CREATE TABLE ontime_replica (FlightDate Date,Year UInt16) ENGINE = ReplicatedMergeTree(&apos;/clickhouse_perftest/tables/ontime_replica&apos;,&apos;{replica}&apos;,FlightDate,(Year, FlightDate),8192);   insert into ontime_replica (FlightDate,Year)values(&apos;2017-04-18&apos;,2017); 在其他节点查询   select * from  ontime_replica   十一、 创建用户    直接编辑user.xml 文件    在&lt;user&gt; 这个范围中添加  &lt;/user&gt;    如果使用明文密码，直接写入到下面的明文密码处     &lt;password&gt; 明文密码 &lt;/password&gt;.   如果使用SHA256加密的密码，请使用如下配置    Example:    &lt;password_sha256_hex&gt;65e84be33532fb784c48129675f9eff3a682b27168c0ea744b2cf58ee02337c5&lt;/password_sha256_hex&gt;  使用下面的命令生成密码：  PASSWORD=$(base64 &lt; /dev/urandom | head -c8); echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha256sum | tr -d &apos;-&apos; 第一行地密码是，第二行是加密过的密码 SHA256. 例如如下配置 &lt;dba&gt;   &lt;password_sha256_hex&gt;ef375dec86573b84efd45187966705c4a7b00d74c6eb8e4b8372e4ea9ebbe796&lt;/password_sha256_hex&gt;           &lt;networks incl=&quot;networks&quot; /&gt;           &lt;profile&gt;default&lt;/profile&gt;           &lt;quota&gt;default&lt;/quota&gt;           &lt;allow_databases&gt;              &lt;database&gt;default&lt;/database&gt;           &lt;/allow_databases&gt; &lt;/dba&gt;权限配置: readonly 只读权限default   有些权限</code></pre><p>github <a href="">https://github.com/liwg1995/blong/blob/master/clickhouse%20.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;clickhouse&quot;&gt;&lt;a href=&quot;#clickhouse&quot; class=&quot;headerlink&quot; title=&quot;clickhouse&quot;&gt;&lt;/a&gt;clickhouse&lt;/h2&gt;&lt;p&gt;   &lt;a href=&quot;&quot;&gt;https://clickhouse.yandex/tutorial.html&lt;/a&gt;  快速搭建集群参考 &lt;/p&gt;
&lt;p&gt;   &lt;a href=&quot;&quot;&gt;https://clickhouse.yandex/reference_en.html &lt;/a&gt; 官网文档&lt;/p&gt;
&lt;p&gt;   &lt;a href=&quot;&quot;&gt;https://habrahabr.ru/company/smi2/blog/317682/&lt;/a&gt; 关于集群配置参考  &lt;/p&gt;
&lt;h3 id=&quot;Clickhouse-基本介绍&quot;&gt;&lt;a href=&quot;#Clickhouse-基本介绍&quot; class=&quot;headerlink&quot; title=&quot;Clickhouse  基本介绍&quot;&gt;&lt;/a&gt;Clickhouse  基本介绍&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;Clickhouse 是属于OLAP(联机分析处理)开源的列存储数据管理系统。
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;特点：&quot;&gt;&lt;a href=&quot;#特点：&quot; class=&quot;headerlink&quot; title=&quot;特点：&quot;&gt;&lt;/a&gt;特点：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;可以线性扩展
简单，方便 
高度可靠的 
容错(支持多主机异步复制，可以跨多个数据中心部署，单个节点或整个数据中心的停机时间不会影响系统的读写可用性)
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="clickhouse" scheme="http://blog.olei.me/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>七牛云迁移至阿里云oss单机部署方式</title>
    <link href="http://blog.olei.me/2018/01/05/%E4%B8%83%E7%89%9B%E4%BA%91%E8%BF%81%E7%A7%BB%E8%87%B3%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F/"/>
    <id>http://blog.olei.me/2018/01/05/七牛云迁移至阿里云oss单机部署方式/</id>
    <published>2018-01-05T08:48:48.000Z</published>
    <updated>2018-01-05T08:51:54.812Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>只介绍单机部署方式，对于小于30TB的数据，采用单机部署就可以了（除了大中型公司以外，一般很少有bucket超过30TB的存储量）</p><h2 id="基于java1-7及以上版本"><a href="#基于java1-7及以上版本" class="headerlink" title="基于java1.7及以上版本  "></a>基于<code>java1.7</code>及以上版本  </h2><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载:"></a>工具下载:</h3><ul><li>单机部署支持<code>linux</code>，<code>mac</code>以及<code>windows</code></li><li>下载地址：<a href="http://gosspublic.alicdn.com/ossimport/standalone/ossimport-2.3.1.zip" target="_blank" rel="external">ossimport-2.3.1.zip</a><a id="more"></a></li><li><code>unzip</code>解压: </li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip ossimport-2.3.1.zip</div></pre></td></tr></table></figure><p>结构如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ossimport</div><div class="line">├── bin</div><div class="line">│   └── ossimport2.jar  # 包括Master、Worker、TaskTracker、Console四个模块的总jar</div><div class="line">├── conf</div><div class="line">│   ├── local_job.cfg   # Job配置文件</div><div class="line">│   └── sys.properties  # 系统运行参数配置文件</div><div class="line">├── console.bat         # Windows命令行，可以分布执行调入任务</div><div class="line">├── console.sh          # Linux命令行，可以分布执行调入任务</div><div class="line">├── import.bat          # Windows一键导入，执行配置文件为conf/local_job.cfg配置的数据迁移任务，包括启动、迁移、校验、重试</div><div class="line">├── import.sh           # Linux一键导入，执行配置文件为conf/local_job.cfg配置的数据迁移任务，包括启动、迁移、校验、重试</div><div class="line">├── logs                # 日志目录</div><div class="line">└── README.md           # 说明文档，强烈建议使用前仔细阅读</div></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>单机模式下，一般配置的话，只用配置一个<code>local_job.cfg</code>文件，举例:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line">#是否打开增量模式，如果设为true，会每间隔incrementalModeInterval(单位秒)重新扫描一次增量数据，并将增量数据同步到oss上,incrementalModeInterval不建议配置成小于3600秒的值，会浪费很多请求次数，造成额外的开销(目前可配置的最小间隔为900秒)</div><div class="line">isIncremental=false</div><div class="line">incrementalModeInterval=86400</div><div class="line"></div><div class="line">##############################################################同步源端设置##############################################################</div><div class="line">#同步源类型，目前支持：</div><div class="line">#1.local(本地文件，此选项只需要填写srcPrefix，不需要填写srcAccessKey，srcSecretKey，srcDomain，srcBucket)</div><div class="line">#2.oss(从oss的一个bucket迁移到另一个bucket)</div><div class="line">#3.qiniu(七牛)</div><div class="line">#4.bos(百度的云存储)</div><div class="line">#5.ks3(金山的云存储)</div><div class="line">#6.s3(亚马逊s3)</div><div class="line">#7.youpai(又拍云，又拍云获取文件列表的接口比较特殊，在同步时list不支持断点，因此在list没有完成时杀掉同步进程会导致下次会重新全部list文件列表)</div><div class="line">#8.http (通过提供的http链接列表同步数据，此选项不需要填写srcAccessKey，srcSecretKey，srcDomain，srcBucket，srcPrefix）</div><div class="line">#9.cos(腾讯云)</div><div class="line">#10.azure(微软blob)</div><div class="line">srcType=qiniu</div><div class="line"></div><div class="line">#源access key,同步本地文件以及通过http地址同步的不需要填,大部分云平台填写控制台获取的acceess key/accss key id,又拍云填写操作员账号</div><div class="line">srcAccessKey=SW-LSdyko******MzK7WiFqd-icx6******6hx2q</div><div class="line"></div><div class="line">#源secrect key,同步本地文件以及通过http地址同步的不需要填,大部分云平台填写控制台获取的secret key/access key secret,又拍云填写操作员密码</div><div class="line">srcSecretKey=QbywDRe******bfF5QcaZ******q3I-4Fv3Xeh_g</div><div class="line"></div><div class="line">#源endpoint,同步本地文件以及通过http地址同步的不需要填</div><div class="line">#1.oss: 从控制台获取域名(非带bucket前缀的二级域名),域名列表参考https://help.aliyun.com/document_detail/31834.html; 例:&quot;srcDomain=http://oss-cn-hangzhou-internal.aliyuncs.com&quot;; 如果用阿里云ecs虚拟机做迁移的，请使用internal域名，不计费且不受虚拟机带宽限制(非虚拟机无法使用)；例：http://oss-cn-hangzhou-internal.aliyuncs.com</div><div class="line">#2.七牛: 从七牛控制台获取对应bucket的域名</div><div class="line">#3.百度bos: http://bj.bcebos.com或者http://gz.bcebos.com</div><div class="line">#4.金山ks3: http://kss.ksyun.com或者http://ks3-cn-beijing.ksyun.com或者http://ks3-us-west-1.ksyun.com</div><div class="line">#5.亚马逊s3: 各个region的地址请参考http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region</div><div class="line">#6.又拍云:  http://v0.api.upyun.com(自动判断最优线路)或者http://v1.api.upyun.com(电信线路)或者http://v2.api.upyun.com(联通网通线路)或者http://v3.api.upyun.com(移动铁通线路)</div><div class="line">#7.腾讯云: cos v3版本不需要填写;cos v4版本需要填上bucket所在的区域，比如华南园区填写:gz,华北园区:tj,华东园区:sh</div><div class="line">#8.微软blob: 连接字符串中的EndpointSuffix，如core.chinacloudapi.cn</div><div class="line">srcDomain=http://mybucket.u.qiniudn.com</div><div class="line"></div><div class="line">#源bucket名字，同步本地文件以及通过http地址同步的不需要填，不需要加上&quot;/&quot;；微软blob填container名称</div><div class="line">srcBucket=mybucket</div><div class="line"></div><div class="line">#源前缀，默认为空，如果srcType=local，则此目录是本地目录，如果是其他类型，则是源Bucket里需要同步的Object的前缀,注意如果是本地目录，需要完整目录路径(以&apos;/&apos;进行分割并且以&apos;/&apos;结尾,例: c:/example/)</div><div class="line">srcPrefix=</div><div class="line"></div><div class="line">##############################################################同步目的端设置################################################################</div><div class="line">#目的 access key</div><div class="line">destAccessKey=Jwd1******nMnZBs</div><div class="line"></div><div class="line">#目的 secret key</div><div class="line">destSecretKey=ir8Qt*****jwh5b0eF******xM5QE</div><div class="line"></div><div class="line">#目的endpoint,请根据您的实际oss区域填写，默认为杭州的域名,如果用阿里云ecs虚拟机做迁移的，请使用internal域名，不计费且不受虚拟机带宽限制(非虚拟机无法使用)；例：http://oss-cn-hangzhou-internal.aliyuncs.com</div><div class="line">#注意:域名里不要带上bucket前缀,oss域名帮助页面:https://help.aliyun.com/document_detail/31837.html</div><div class="line">destDomain=http://oss-cn-hangzhou-internal.aliyuncs.com</div><div class="line"></div><div class="line">#目的bucket，不需要加上&quot;/&quot;</div><div class="line">destBucket=mybucket</div><div class="line"></div><div class="line">#目标前缀，默认为空，直接放在bucket下(如果要将数据同步到oss的某个目录下，请以&apos;/&apos;结尾）,注意:oss不支持以 &apos;/&apos; 作为文件的开头，所以destPrefix请不要配置以&apos;/&apos;做为开头</div><div class="line">#一个本地文件路径为 srcPrefix + relativePath的文件，迁移到oss的路径为destDomain/destBucket/destPrefix + relativePath</div><div class="line">#一个云端文件路径为 srcDomain/srcBucket/srcPrefix + relativePath的文件，迁移到oss的路径为destDomain/destBucket/destPrefix + relativePath</div><div class="line">destPrefix=</div><div class="line"></div><div class="line">##############################################################srcType=cos时的配置项###########################################################</div><div class="line">#腾讯云的appId</div><div class="line">appId=0</div><div class="line"></div><div class="line">##############################################################srcType=youpai时的配置项########################################################</div><div class="line">#又拍云存储数据迁移文件是否从CDN下载。又拍云云存储下载操作默认限速，影响数据迁移速度；如果配置了CDN，可以从云存储上获取迁移文件的列表，数据从CDN上下载。cdnHost+key即为下载地址。</div><div class="line">isDownloadFromCdn=false</div><div class="line">cdnDomain=</div><div class="line"></div><div class="line">##############################################################srcType=http时的配置选项########################################################</div><div class="line">#srcType=&quot;http&quot;时，需要提供http列表文件的绝对路径，此文件中的http链接需要划分成两列，分别代表前缀以及上传到oss后的相对路径</div><div class="line">#例，有一个完整的http链接是127.0.0.1/aa/bb.jpg,不同的切分方法最后会导致上传到oss的路径会不一样：</div><div class="line">#c:/example/http.list文件内容：</div><div class="line">#127.0.0.1/aa/              bb.jpg</div><div class="line">#127.0.0.1/                   aa/bb.jpg</div><div class="line"># 第一行的文件导入到oss后的路径为 &quot;destDomain/destBucket/destPrefix&quot; + &quot;bb.jpg&quot;</div><div class="line"># 第二行的文件导入到oss后的路径为 &quot;destDomain/destBucket/destPrefix&quot; + &quot;aa/bb.jpg&quot;</div><div class="line"></div><div class="line">httpListFilePath=c:/example/http.list</div><div class="line">httpPrefixColumn=1</div><div class="line">relativePathColumn=2</div><div class="line"></div><div class="line">##############################################################任务配置，没有特殊需求不需要修改#################################################</div><div class="line">#job名字，每个任务唯一，单机模式下请不要修改此项</div><div class="line">jobName=local_test</div><div class="line"></div><div class="line">#job类型(import/audit)，import为同步数据到oss，audit为校验源端数据和oss数据是否一致</div><div class="line">jobType=import</div><div class="line"></div><div class="line">#只导入源文件最后修改时间大于该时间的数据，默认为0，这个时间为unix时间戳（秒数）</div><div class="line">importSince=0</div><div class="line"></div><div class="line">#在校验时，如果文件的最后修改时间大于该值，则跳过此文件的校验，默认值0为关闭该功能，所有文件都需要校验，这个时间为unix时间戳（秒数），jobType为audit时此项不生效</div><div class="line">lastModify=0</div><div class="line"></div><div class="line">#数据迁移时，是否跳过已经存在的文件。当设置为true时，根据文件的size和LastModifedTime判断是否跳过；为false时，总是覆盖OSS上已有文件。jobType为audit时此项不生效。</div><div class="line">isSkipExistFile=false</div><div class="line"></div><div class="line"># 每个子任务最大的文件个数限制，这个会影响到任务执行的并行度，一般配置为总的文件数/120</div><div class="line">taskObjectCountLimit=10000</div><div class="line"></div><div class="line">#每个子任务下载的最大文件大小限制(bytes)</div><div class="line">taskObjectSizeLimit=1000000000</div><div class="line"></div><div class="line">#并行扫描文件列表的线程数，只影响扫描文件的效率,没有特殊需求不要修改</div><div class="line">scanThreadCount=1</div><div class="line"></div><div class="line">#最大允许并行扫描目录的深度，默认为1就是只能在顶级目录间并行扫描,没有特殊需求不要修改,随意配置的过大会导致任务无法正常运行</div><div class="line">maxMultiThreadScanDepth=1</div><div class="line"></div><div class="line">#单个大文件分片上传并发数，默认超过150MB为大文件，分片为50MB，srcType=local时有效，其它情况该配置项无效</div><div class="line">uploadThreadNumPerLargeFile=3</div><div class="line"></div><div class="line">#大于该值的文件使用分片上传，否则使用普通上传，请配置大于1MB以上；有效配置值如：50m/1024m/5g</div><div class="line">multipartUploadThreshold=150m</div><div class="line"></div><div class="line">#分配上传时分片大小，请配置大于100k的数据，否则无效，采用默认值50MB；有效配置值如：500k/50m/2g</div><div class="line">multipartUploadPartSize=50m</div><div class="line"></div><div class="line">#存储在OSS上的数据否加密，默认不加密</div><div class="line">isServerSideEncryption=false</div><div class="line"></div><div class="line">#local模式时，链接文件是否上传，默认不上传</div><div class="line">isAllowSymbolicLink=false</div><div class="line"></div><div class="line"># 七牛云存储获取Meta的方式，有效值head和stat，默认使用stat；head通过HTTP HEAD请求获取，stat通过BucketManager.stat</div><div class="line">getObjectMetaMode=stat</div><div class="line"></div><div class="line">#数据迁移后是否进行数据的正确性校验，默认校验</div><div class="line">isAuditAfterImport=true </div><div class="line"></div><div class="line">#数据校验方式，有效值为simple/general/detailed，默认值general；simple只校验文件的size，general校验文件的size/lastModify/header，detailed检验文件的CRC或MD5，开发中</div><div class="line">auditMode=general</div></pre></td></tr></table></figure><h3 id="运行："><a href="#运行：" class="headerlink" title="运行："></a>运行：</h3><ul><li><code>Windows</code><br>在 <code>cmd.exe</code> 中执行 <code>import.bat</code></li><li><code>linux</code> or <code>mac</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sh import.sh</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;只介绍单机部署方式，对于小于30TB的数据，采用单机部署就可以了（除了大中型公司以外，一般很少有bucket超过30TB的存储量）&lt;/p&gt;
&lt;h2 id=&quot;基于java1-7及以上版本&quot;&gt;&lt;a href=&quot;#基于java1-7及以上版本&quot; class=&quot;headerlink&quot; title=&quot;基于java1.7及以上版本  &quot;&gt;&lt;/a&gt;基于&lt;code&gt;java1.7&lt;/code&gt;及以上版本  &lt;/h2&gt;&lt;h3 id=&quot;工具下载&quot;&gt;&lt;a href=&quot;#工具下载&quot; class=&quot;headerlink&quot; title=&quot;工具下载:&quot;&gt;&lt;/a&gt;工具下载:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单机部署支持&lt;code&gt;linux&lt;/code&gt;，&lt;code&gt;mac&lt;/code&gt;以及&lt;code&gt;windows&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;下载地址：&lt;a href=&quot;http://gosspublic.alicdn.com/ossimport/standalone/ossimport-2.3.1.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ossimport-2.3.1.zip&lt;/a&gt;
    
    </summary>
    
    
      <category term="oss" scheme="http://blog.olei.me/tags/oss/"/>
    
  </entry>
  
  <entry>
    <title>clickhouse在mac以及ubuntu上的安装方式</title>
    <link href="http://blog.olei.me/2018/01/03/clickhouse%E5%9C%A8mac%E4%BB%A5%E5%8F%8Aubuntu%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F/"/>
    <id>http://blog.olei.me/2018/01/03/clickhouse在mac以及ubuntu上的安装方式/</id>
    <published>2018-01-03T11:01:34.000Z</published>
    <updated>2018-01-16T03:00:22.957Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mac下docker安装"><a href="#mac下docker安装" class="headerlink" title="mac下docker安装"></a><code>mac</code>下<code>docker</code>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -d --name some-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server</div></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -it --rm --link some-clickhouse-server:clickhouse-server yandex/clickhouse-client --host clickhouse-server</div></pre></td></tr></table></figure><ul><li>第二条命令直接就访问了，下次访问也可以使用：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker exec -it -u root  some-clickhouse-server /usr/bin/clickhouse --client -m</div></pre></td></tr></table></figure><h2 id="ubuntu安装"><a href="#ubuntu安装" class="headerlink" title="ubuntu安装"></a><code>ubuntu</code>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4    # optional</div><div class="line"></div><div class="line">$ sudo apt-add-repository &quot;deb http://repo.yandex.ru/clickhouse/trusty stable main&quot;</div><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">$ sudo apt-get install clickhouse-server-common clickhouse-client -y</div><div class="line"></div><div class="line">$ sudo service clickhouse-server start</div><div class="line">$ clickhouse-client</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;mac下docker安装&quot;&gt;&lt;a href=&quot;#mac下docker安装&quot; class=&quot;headerlink&quot; title=&quot;mac下docker安装&quot;&gt;&lt;/a&gt;&lt;code&gt;mac&lt;/code&gt;下&lt;code&gt;docker&lt;/code&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ docker run -d --name some-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="clickhouse" scheme="http://blog.olei.me/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu与mac环境安装pyspider出现的问题以及解决方案</title>
    <link href="http://blog.olei.me/2017/12/22/ubuntu%E4%B8%8Emac%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85pyspider%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://blog.olei.me/2017/12/22/ubuntu与mac环境安装pyspider出现的问题以及解决方案/</id>
    <published>2017-12-22T06:42:54.000Z</published>
    <updated>2017-12-22T06:43:54.498Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ubuntu下安装"><a href="#ubuntu下安装" class="headerlink" title="ubuntu下安装"></a><code>ubuntu</code>下安装</h3><ul><li>一般会出现<code>pycurl</code>安装不了的问题，执行:<a id="more"></a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ apt-get install python python-dev python-distribute python-pip \</div><div class="line">libcurl4-openssl-dev libxml2-dev libxslt1-dev python-lxml \ </div><div class="line">libssl-dev zlib1g-dev</div><div class="line"></div><div class="line">$ pip install pyspider</div></pre></td></tr></table></figure><h3 id="Mac系统"><a href="#Mac系统" class="headerlink" title="Mac系统"></a><code>Mac</code>系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pip install pyspider</div></pre></td></tr></table></figure><h4 id="遇到安装不了pycurl错误"><a href="#遇到安装不了pycurl错误" class="headerlink" title="遇到安装不了pycurl错误:"></a>遇到安装不了<code>pycurl</code>错误:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo env ARCHFLAGS=&quot;-arch x86_64&quot; LDFLAGS=&quot;-L/usr/local/opt/openssl/lib&quot; pip install pycurl</div></pre></td></tr></table></figure><ul><li>遇到类似<code>command &#39;clang&#39; failed with exit status 1</code>的错误:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install openssl</div></pre></td></tr></table></figure><ul><li>仍然有错会提醒你升级<code>openssl</code>：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew upgrade openssl</div></pre></td></tr></table></figure><ul><li>写入环境变量:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;export PATH=&quot;/usr/local/opt/openssl/bin:$PATH&quot;&apos; &gt;&gt; ~/.bash_profile</div></pre></td></tr></table></figure><p>然后再尝试安装最上面的那个命令  </p><ul><li>遇到这个错误:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</div></pre></td></tr></table></figure><p>尝试这个命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ xcode-select --install</div></pre></td></tr></table></figure><ul><li>再遇到这个错误：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pycurl: libcurl link-time ssl backend (openssl) is different from compile-time ssl backend (none/other)</div></pre></td></tr></table></figure><p>执行下面的操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ pip uninstall pycurl</div><div class="line"></div><div class="line">$ export PYCURL_SSL_LIBRARY=openssl</div><div class="line"></div><div class="line">$ pip install pycurl</div><div class="line"></div><div class="line">$ pip install pyspider</div></pre></td></tr></table></figure><p>这就是<code>mac</code>可能遇到的错误了</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ubuntu下安装&quot;&gt;&lt;a href=&quot;#ubuntu下安装&quot; class=&quot;headerlink&quot; title=&quot;ubuntu下安装&quot;&gt;&lt;/a&gt;&lt;code&gt;ubuntu&lt;/code&gt;下安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一般会出现&lt;code&gt;pycurl&lt;/code&gt;安装不了的问题，执行:
    
    </summary>
    
    
      <category term="pyspider" scheme="http://blog.olei.me/tags/pyspider/"/>
    
  </entry>
  
  <entry>
    <title>flask + nginx + uwsgi + python3 + supervisor做flask的nginx代理</title>
    <link href="http://blog.olei.me/2017/12/11/flask-nginx-uwsgi-python3-supervisor%E5%81%9Aflask%E7%9A%84nginx%E4%BB%A3%E7%90%86/"/>
    <id>http://blog.olei.me/2017/12/11/flask-nginx-uwsgi-python3-supervisor做flask的nginx代理/</id>
    <published>2017-12-11T07:17:52.000Z</published>
    <updated>2017-12-11T07:41:04.604Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ubuntu 16.04为例</p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装<code>nginx</code></h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nginx</div></pre></td></tr></table></figure><a id="more"></a><h3 id="安装python虚拟环境"><a href="#安装python虚拟环境" class="headerlink" title="安装python虚拟环境"></a>安装<code>python</code>虚拟环境</h3><ul><li>安装<code>virtualenvwrapper</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install virtualenvwrapper</div></pre></td></tr></table></figure><ul><li>在根目录下的<code>.zshrc</code>或者<code>.bashrc</code>添加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export WORKON_HOME=$HOME/.virtualenvs</div><div class="line">source /usr/local/bin/virtualenvwrapper.sh</div></pre></td></tr></table></figure><ul><li>之后运行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source .zhsrc</div></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source .bashrc</div></pre></td></tr></table></figure><h3 id="配置虚拟环境"><a href="#配置虚拟环境" class="headerlink" title="配置虚拟环境"></a>配置虚拟环境</h3><ul><li>创建<code>python3</code>的虚拟环境：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdirvirtualenv /usr/bin/python3</div></pre></td></tr></table></figure><ul><li>安装<code>flask</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install flask</div></pre></td></tr></table></figure><ul><li>安装<code>uwsgi</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install uwsgi</div></pre></td></tr></table></figure><h3 id="安装supervisor"><a href="#安装supervisor" class="headerlink" title="安装supervisor"></a>安装<code>supervisor</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install supervisor</div></pre></td></tr></table></figure><blockquote><p>我们在<code>root</code>的根目录下创建项目</p></blockquote><h3 id="hello-world项目为例"><a href="#hello-world项目为例" class="headerlink" title="hello world项目为例"></a><code>hello world</code>项目为例</h3><ul><li>创建<code>flask</code>文件夹，写入<code>hello.py</code>文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir flask</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim hello.py</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">from flask import Flask</div><div class="line">app = Flask(__name__)</div><div class="line">@app.route(&quot;/&quot;)</div><div class="line">def hello():</div><div class="line">    return &quot;Hello World!&quot;</div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">    app.run(host=&apos;0.0.0.0&apos;, port=5009)</div></pre></td></tr></table></figure><ul><li>创建<code>hello.ini</code>文件，为了<code>uwsgi</code>配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim hello.ini</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[uwsgi]</div><div class="line">wsgi-file = hello.py</div><div class="line">chdir = /root/flask</div><div class="line">socket = 127.0.0.1:5009</div><div class="line">callable = application</div><div class="line">processes = 10</div><div class="line">threads = 2</div><div class="line">stats = 127.0.0.1:9191</div></pre></td></tr></table></figure><blockquote><p>解析输入<code>uwsgi --ini hello.ini</code>就可以启动<code>uwsgi</code>了，但是退出就又没有了，我们用<code>supervisor</code></p><ul><li>在<code>/etc/supervisor/conf.d</code>下创建<code>hello.conf</code>文件：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim hello.conf</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[program:flask]</div><div class="line"># 启动命令入口</div><div class="line">command=/root/.virtualenvs/py3_flask/bin/uwsgi /root/flask/hello.ini</div><div class="line"></div><div class="line"># 命令程序所在目录</div><div class="line">directory=/root/flask</div><div class="line">#运行命令的用户名</div><div class="line">user=root</div><div class="line"></div><div class="line">autostart=true</div><div class="line">autorestart=true</div></pre></td></tr></table></figure><ul><li><code>/etc/nginx/conf.d</code>下创建<code>hello.conf</code>用于<code>nginx</code>的代理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim hello.conf</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 5002;</div><div class="line">    server_name IP/domain_name;</div><div class="line">    charset utf-8;</div><div class="line">    client_max_body_size 75M;</div><div class="line">    location / &#123;</div><div class="line">    include uwsgi_params;</div><div class="line">    uwsgi_pass 127.0.0.1:5009;</div><div class="line">    uwsgi_param UWSGI_PYTHON /root/.virtualenvs/py3_flask;</div><div class="line">    uwsgi_param UWSGI_CHDIR /root/flask;</div><div class="line">    uwsgi_param UWSGI_SCRIPT hello:app;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><ul><li>重启<code>nginx</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/nginx restart</div></pre></td></tr></table></figure><ul><li>重启<code>supervisor</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/supervisor restart</div></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问:"></a>访问:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://ip:5002</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;ubuntu 16.04为例&lt;/p&gt;
&lt;h3 id=&quot;安装nginx&quot;&gt;&lt;a href=&quot;#安装nginx&quot; class=&quot;headerlink&quot; title=&quot;安装nginx&quot;&gt;&lt;/a&gt;安装&lt;code&gt;nginx&lt;/code&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;apt-get install nginx&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="flask" scheme="http://blog.olei.me/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库slow log的两种分析方法</title>
    <link href="http://blog.olei.me/2017/11/29/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93slow-log%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.olei.me/2017/11/29/MySQL数据库slow-log的两种分析方法/</id>
    <published>2017-11-29T06:43:08.000Z</published>
    <updated>2017-11-29T06:44:53.320Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysqldumpslow"><a href="#mysqldumpslow" class="headerlink" title="mysqldumpslow"></a>mysqldumpslow</h3><p><code>$ mysqldumpslow -s t -t 5 proddbcrm01_slowlog_20171129.log</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Reading mysql slow query log from proddbcrm01_slowlog_20171129.log</div><div class="line">Count: 608  Time=0.52s (315s)  Lock=0.00s (0s)  Rows=0.0 (0), focuscrm[focuscrm]@[172.18.16.13]</div><div class="line">  select * from `sms_send_tasks` where (`send_at` &lt; &apos;S&apos; and `status` = N and `send_mode` = N)</div><div class="line"></div><div class="line">Count: 608  Time=0.50s (306s)  Lock=0.00s (0s)  Rows=0.0 (0), focuscrm[focuscrm]@[172.18.16.13]</div><div class="line">  select * from `sms_send_tasks` where (`send_at` &lt; &apos;S&apos; and `status` = N and `send_mode` = N) limit N</div><div class="line"></div><div class="line">Count: 137  Time=0.21s (28s)  Lock=0.00s (0s)  Rows=10.0 (1370), focuscrm[focuscrm]@[172.18.16.15]</div><div class="line">  select * from `contacts` where `enterprise_id` = N and `name` like &apos;S&apos; and `contacts`.`deleted_at` is null order by `updated_at` desc limit N offset N</div><div class="line"></div><div class="line">Count: 135  Time=0.11s (14s)  Lock=0.00s (0s)  Rows=1.0 (135), focuscrm[focuscrm]@[172.18.16.15]</div><div class="line">  select count(*) as aggregate from `contacts` where `enterprise_id` = N and `name` like &apos;S&apos; and `contacts`.`deleted_at` is null</div><div class="line"></div><div class="line">Died at /usr/local/bin/mysqldumpslow line 161, &lt;&gt; chunk 1488.</div></pre></td></tr></table></figure></p><a id="more"></a><h3 id="mysqlsla"><a href="#mysqlsla" class="headerlink" title="mysqlsla"></a>mysqlsla</h3><p><code>$ mysqlsla -lt slow proddbcrm01_slowlog_20171129.log</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Grand Totals: Time 665 s, Lock 0 s, Rows sent 1.50k, Rows Examined 799.57M</div><div class="line"></div><div class="line"></div><div class="line">______________________________________________________________________ 001 ___</div><div class="line">Count         : 608  (40.86%)</div><div class="line">Time          : 315.328047 s total, 518.632 ms avg, 468.31 ms to 592.164 ms max  (47.41%)</div><div class="line">  95% of Time : 297.713149 s total, 515.967 ms avg, 468.31 ms to 561.262 ms max</div><div class="line">Lock Time (s) : 21.357 ms total, 35 �s avg, 24 �s to 62 �s max  (39.48%)</div><div class="line">  95% of Lock : 19.822 ms total, 34 �s avg, 24 �s to 45 �s max</div><div class="line">Rows sent     : 0 avg, 0 to 0 max  (0.00%)</div><div class="line">Rows examined : 637.98k avg, 637.98k to 637.98k max  (48.51%)</div><div class="line">Database      :</div><div class="line">Users         :</div><div class="line">focuscrm@ 172.18.16.13 : 100.00% (608) of query, 81.72% (1216) of all users</div><div class="line"></div><div class="line">Query abstract:</div><div class="line">SET timestamp=N; SELECT * FROM sms_send_tasks WHERE (send_at &lt; &apos;S&apos; AND status = N AND send_mode = N);</div><div class="line"></div><div class="line">Query sample:</div><div class="line">SET timestamp=1511884922;</div><div class="line">select * from `sms_send_tasks` where (`send_at` &lt; &apos;2017-11-29 00:02:01&apos; and `status` = 0 and `send_mode` = 0);</div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysqldumpslow&quot;&gt;&lt;a href=&quot;#mysqldumpslow&quot; class=&quot;headerlink&quot; title=&quot;mysqldumpslow&quot;&gt;&lt;/a&gt;mysqldumpslow&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ mysqldumpslow -s t -t 5 proddbcrm01_slowlog_20171129.log&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Reading mysql slow query log from proddbcrm01_slowlog_20171129.log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Count: 608  Time=0.52s (315s)  Lock=0.00s (0s)  Rows=0.0 (0), focuscrm[focuscrm]@[172.18.16.13]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  select * from `sms_send_tasks` where (`send_at` &amp;lt; &amp;apos;S&amp;apos; and `status` = N and `send_mode` = N)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Count: 608  Time=0.50s (306s)  Lock=0.00s (0s)  Rows=0.0 (0), focuscrm[focuscrm]@[172.18.16.13]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  select * from `sms_send_tasks` where (`send_at` &amp;lt; &amp;apos;S&amp;apos; and `status` = N and `send_mode` = N) limit N&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Count: 137  Time=0.21s (28s)  Lock=0.00s (0s)  Rows=10.0 (1370), focuscrm[focuscrm]@[172.18.16.15]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  select * from `contacts` where `enterprise_id` = N and `name` like &amp;apos;S&amp;apos; and `contacts`.`deleted_at` is null order by `updated_at` desc limit N offset N&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Count: 135  Time=0.11s (14s)  Lock=0.00s (0s)  Rows=1.0 (135), focuscrm[focuscrm]@[172.18.16.15]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  select count(*) as aggregate from `contacts` where `enterprise_id` = N and `name` like &amp;apos;S&amp;apos; and `contacts`.`deleted_at` is null&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Died at /usr/local/bin/mysqldumpslow line 161, &amp;lt;&amp;gt; chunk 1488.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.olei.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="MySQL" scheme="http://blog.olei.me/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下使用ldap做服务器用户认证</title>
    <link href="http://blog.olei.me/2017/11/03/ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8ldap%E5%81%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/"/>
    <id>http://blog.olei.me/2017/11/03/ubuntu下使用ldap做服务器用户认证/</id>
    <published>2017-11-03T11:40:21.000Z</published>
    <updated>2017-11-03T11:47:55.647Z</updated>
    
    <content type="html"><![CDATA[<h3 id="server端"><a href="#server端" class="headerlink" title="server端"></a><code>server</code>端</h3><ul><li>安装<code>openldap</code><ul><li>参考:<a href="http://blog.olei.me/2017/10/18/ubuntu16-04%E5%AE%89%E8%A3%85openldap%E4%BB%A5%E5%8F%8Aphpldapadmin/">openldap安装</a></li></ul></li><li>安装<code>migrationtools</code><a id="more"></a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ apt-get install migrationtools</div></pre></td></tr></table></figure><ul><li>修改<code>migrate_common.sh</code>，该文件在<code>/etc/migrationtools</code>文件夹下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ DEFAULT_MAIL_DOMAIN = &quot;olei.me&quot;; </div><div class="line">$ DEFAULT_BASE = &quot;dc=olei,dc=me&quot;;</div></pre></td></tr></table></figure><blockquote><p>以上的东西改成自己的</p></blockquote><ul><li>配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ cd /usr/share/migrationtools</div><div class="line">$ ./migrate_base.pl &gt; /tmp/base.ldif</div><div class="line">$ ./migrate_passwd.pl /etc/passwd&gt; /tmp/passwd.ldif</div><div class="line">$ ./migrate_group.pl /etc/group&gt; /tmp/group.ldif</div><div class="line">$ ldapadd -x -D &quot;cn=admin,dc=olei,dc=me&quot; -W -f /tmp/base.ldif</div><div class="line">$ ldapadd -x -D &quot;cn=admin,dc=olei,dc=me&quot; -W -f /tmp/passwd.ldif</div><div class="line">$ ldapadd -x -D &quot;cn=admin,dc=olei,dc=me&quot; -W -f /tmp/group.ldif</div></pre></td></tr></table></figure><h3 id="client端"><a href="#client端" class="headerlink" title="client端"></a><code>client</code>端</h3><h4 id="手动方式"><a href="#手动方式" class="headerlink" title="手动方式"></a>手动方式</h4><h2 id="手动方式-1"><a href="#手动方式-1" class="headerlink" title="手动方式"></a>手动方式</h2><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ apt-get install ldap-utils libpam-ldap libnss-ldap nslcd</div></pre></td></tr></table></figure><blockquote><p>期间配置一些server端的信息  </p><h3 id="认证方式中添加ldap"><a href="#认证方式中添加ldap" class="headerlink" title="认证方式中添加ldap"></a>认证方式中添加ldap</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ auth-client-config -t nss -p lac_ldap</div></pre></td></tr></table></figure><h3 id="查看-etc-nsswitch-conf"><a href="#查看-etc-nsswitch-conf" class="headerlink" title="查看/etc/nsswitch.conf"></a>查看/etc/nsswitch.conf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nsswitch.conf</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 可以看到多了如下的东西</div><div class="line">passwd:     files ldap</div><div class="line">group:      files ldap</div><div class="line">shadow:     files ldap</div></pre></td></tr></table></figure><h3 id="使认证通过后自动创建用户家目录"><a href="#使认证通过后自动创建用户家目录" class="headerlink" title="使认证通过后自动创建用户家目录"></a>使认证通过后自动创建用户家目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/pam.d/common-session</div></pre></td></tr></table></figure><blockquote><p>添加：session required pam_mkhomedir.so skel=/etc/skel umask=0022 </p></blockquote><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/pam.d/libnss-ldap restart</div></pre></td></tr></table></figure><h3 id="配置可在本机通过passwd更改用户密码"><a href="#配置可在本机通过passwd更改用户密码" class="headerlink" title="配置可在本机通过passwd更改用户密码"></a>配置可在本机通过passwd更改用户密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/pam.d/common-password  #除去其中的use_authtok参数</div><div class="line">$ /etc/init.d/nscd restart</div></pre></td></tr></table></figure><ul><li>登陆或切换用户时即通过ldap进行认证，如切换为ldap中的用户manager  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ su - manager</div></pre></td></tr></table></figure><blockquote><p>Password:<strong>*</strong><br>Creating directory ‘/home/manager’.<br>manager@ldapclient:~$  </p></blockquote><h4 id="脚本方式"><a href="#脚本方式" class="headerlink" title="脚本方式"></a>脚本方式</h4><ul><li>代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash  </div><div class="line">  </div><div class="line">#--------------------------------------------------------------------------------  </div><div class="line">  </div><div class="line">#Ldap server地址及base DN  </div><div class="line">LDAP_SERVER_IP=xxx.xx.xx.xx  </div><div class="line">BASE_DN=&apos;dc=olei,dc=me&apos;  </div><div class="line">  </div><div class="line">#--------------------------------------------------------------------------------  </div><div class="line">  </div><div class="line">#创建preseed文件-软件安装自应答  </div><div class="line">touch debconf-ldap-preseed.txt  </div><div class="line">echo &quot;ldap-auth-config    ldap-auth-config/ldapns/ldap-server    string    ldap://$LDAP_SERVER_IP&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">echo &quot;ldap-auth-config    ldap-auth-config/ldapns/base-dn    string    $BASE_DN&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">echo &quot;ldap-auth-config    ldap-auth-config/ldapns/ldap_version    select    3&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">echo &quot;ldap-auth-config    ldap-auth-config/dbrootlogin    boolean    false&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">echo &quot;ldap-auth-config    ldap-auth-config/dblogin    boolean    false&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">echo &quot;nslcd   nslcd/ldap-uris string  ldap://$LDAP_SERVER_IP&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">echo &quot;nslcd   nslcd/ldap-base string  $BASE_DN&quot; &gt;&gt; debconf-ldap-preseed.txt  </div><div class="line">  </div><div class="line">cat debconf-ldap-preseed.txt | debconf-set-selections  </div><div class="line">  </div><div class="line">#安装ldap client相关软件  </div><div class="line">apt-get install -y ldap-utils libpam-ldap libnss-ldap nslcd  </div><div class="line">  </div><div class="line">#认证方式中添加ldap  </div><div class="line">auth-client-config -t nss -p lac_ldap  </div><div class="line">  </div><div class="line">#认证登录后自动创建用户家目录  </div><div class="line">echo &quot;session required pam_mkhomedir.so skel=/etc/skel umask=0022&quot; &gt;&gt; /etc/pam.d/common-session  </div><div class="line">  </div><div class="line">#自启动服务 </div><div class="line">/etc/init.d/libnss-ldap restart</div><div class="line">update-rc.d nslcd enable  </div><div class="line">  </div><div class="line">#可以在Host上通过passwd更改用户密码  </div><div class="line">cp /etc/pam.d/common-password /etc/pam.d/common-password.bak  </div><div class="line">sed -i &apos;s/use_authtok//&apos; /etc/pam.d/common-password  </div><div class="line">  </div><div class="line">#使配置生效  </div><div class="line">/etc/init.d/nscd restart</div></pre></td></tr></table></figure></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;server端&quot;&gt;&lt;a href=&quot;#server端&quot; class=&quot;headerlink&quot; title=&quot;server端&quot;&gt;&lt;/a&gt;&lt;code&gt;server&lt;/code&gt;端&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;安装&lt;code&gt;openldap&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;参考:&lt;a href=&quot;http://blog.olei.me/2017/10/18/ubuntu16-04%E5%AE%89%E8%A3%85openldap%E4%BB%A5%E5%8F%8Aphpldapadmin/&quot;&gt;openldap安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安装&lt;code&gt;migrationtools&lt;/code&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.olei.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="openldap" scheme="http://blog.olei.me/tags/openldap/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu搭建DNS服务器</title>
    <link href="http://blog.olei.me/2017/10/27/Ubuntu%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.olei.me/2017/10/27/Ubuntu搭建DNS服务器/</id>
    <published>2017-10-27T06:07:00.000Z</published>
    <updated>2017-10-27T06:09:17.221Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>系统环境:<br>Ubuntu 16.04.3 LTS<br>内网IP : 192.168.1.110</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ apt-get update</div><div class="line">$ apt-get install bind9</div></pre></td></tr></table></figure><a id="more"></a><h3 id="配置缓存转发"><a href="#配置缓存转发" class="headerlink" title="配置缓存转发"></a>配置缓存转发</h3><ul><li>打开打开<code>/etc/bind/named.conf.options</code>,修改后如下:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">acl goodclients &#123;</div><div class="line">        192.168.1.0/24;</div><div class="line">        localhost;</div><div class="line">        localnets;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">options &#123;</div><div class="line">        directory &quot;/var/cache/bind&quot;;</div><div class="line"></div><div class="line">        // If there is a firewall between you and nameservers you want</div><div class="line">        // to talk to, you may need to fix the firewall to allow multiple</div><div class="line">        // ports to talk.  See http://www.kb.cert.org/vuls/id/800113</div><div class="line"></div><div class="line">        // If your ISP provided one or more IP addresses for stable</div><div class="line">        // nameservers, you probably want to use them as forwarders.</div><div class="line">        // Uncomment the following block, and insert the addresses replacing</div><div class="line">        // the all-0&apos;s placeholder.</div><div class="line"></div><div class="line">        // forwarders &#123;</div><div class="line">        //      0.0.0.0;</div><div class="line">        // &#125;;</div><div class="line"></div><div class="line">        //========================================================================</div><div class="line">        // If BIND logs error messages about the root key being expired,</div><div class="line">        // you will need to update your keys.  See https://www.isc.org/bind-keys</div><div class="line">        //========================================================================</div><div class="line">        dnssec-validation auto;</div><div class="line"></div><div class="line">        auth-nxdomain no;    # conform to RFC1035</div><div class="line">        listen-on-v6 &#123; any; &#125;;</div><div class="line"></div><div class="line">        //added</div><div class="line">        listen-on &#123; 192.168.1.110;&#125;;</div><div class="line"></div><div class="line">        recursion yes ;</div><div class="line">        allow-query &#123; goodclients;&#125;;</div><div class="line">        allow-transfer &#123; none; &#125;; # disable zone transfers by default</div><div class="line"></div><div class="line">        forwarders &#123;</div><div class="line">                223.5.5.5; # alidns</div><div class="line">                223.6.6.6; # alidns</div><div class="line">        &#125;;</div><div class="line">        forward only ;</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure><h3 id="配置local文件"><a href="#配置local文件" class="headerlink" title="配置local文件"></a>配置local文件</h3><ul><li><code>named.conf.local</code> 文件默认是空的。本文在配置文件中分别定义一条<code>正向解析</code>和一条<code>反向解析</code>。配置文件修改后类似如下:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//domain-&gt;ip</div><div class="line">zone &quot;local.com&quot; in &#123;</div><div class="line">        type master;</div><div class="line">        file &quot;/var/cache/bind/db.local.com&quot;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">//ip-&gt;domain</div><div class="line">zone &quot;1.168.192.in-addr.arpa&quot; in &#123;</div><div class="line">        type master;</div><div class="line">        file &quot;/var/cache/bind/db.1.168.192&quot;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h3 id="定义区域配置文件"><a href="#定义区域配置文件" class="headerlink" title="定义区域配置文件"></a>定义区域配置文件</h3><blockquote><p>配置文件定义后类似如下，分别是正向和反向两个解析记录。按照自己需求修改相应的区域和区域解析记录，IP等信息。</p><ul><li>正向记录</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /var/cache/bind/db.local.com</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$TTL 604800</div><div class="line">@ IN SOA local.com. root.local.com. (</div><div class="line">2 ; Serial</div><div class="line">604800 ; Refresh</div><div class="line">86400 ; Retry</div><div class="line">2419200 ; Expire</div><div class="line">604000) ; Negative Cache TTL</div><div class="line">;</div><div class="line">; name servers</div><div class="line">@ IN NS ns.local.com.</div><div class="line">@ IN A 192.168.1.110</div><div class="line">;ns records</div><div class="line">ns IN A 192.168.1.110</div><div class="line">;host records</div><div class="line">www IN A 192.168.1.110</div><div class="line">api IN A 192.168.1.100</div></pre></td></tr></table></figure><ul><li>反向记录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /var/cache/bind/db.1.168.192</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$TTL 604800</div><div class="line">@ IN SOA local.com. root.local.com. (</div><div class="line">2 ; Serial Number</div><div class="line">604800 ; Refresh</div><div class="line">86400 ; Retry</div><div class="line">2419200 ; Expire</div><div class="line">86400 ); ; Minimum</div><div class="line"></div><div class="line">@ IN NS local.com.</div><div class="line"></div><div class="line">66 IN PTR www.local.com.</div><div class="line">66 IN PTR api.local.com.</div></pre></td></tr></table></figure><blockquote><p>以上两个文件均写在<code>/var/cache/bind</code> 下</p><h3 id="检查配置、重启"><a href="#检查配置、重启" class="headerlink" title="检查配置、重启"></a>检查配置、重启</h3><ul><li>检查</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd /var/cache/bind</div><div class="line">$ named-checkzone local.com /var/cache/bind/db.local.com</div></pre></td></tr></table></figure><p>输出：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">zone local.com/IN: loaded serial 2</div><div class="line">OK</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ named-checkzone db.1.168.192 /var/cache/bind/db.1.168.192</div></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">zone db.1.168.192/IN: loaded serial 2</div><div class="line">OK</div></pre></td></tr></table></figure><blockquote><p>分别检查了语法和区域配置文件，没有报错。重启bind服务。</p></blockquote><ul><li>重启</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo service bind9 restart</div></pre></td></tr></table></figure><blockquote><p>到这里DNS服务器的配置就完成了</p><h3 id="配置路由器首要DNS"><a href="#配置路由器首要DNS" class="headerlink" title="配置路由器首要DNS"></a>配置路由器首要DNS</h3><ul><li>在路由器里设置<code>首要DNS</code> 为 <code>192.168.1.110</code> ，这样我们就可以在同一个内网下访问：<code>www.local.com</code> 就会指向到 <code>192.168.1.110</code>，访问：<code>api.local.com</code> 就会指向到 <code>192.168.1.100</code></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;系统环境:&lt;br&gt;Ubuntu 16.04.3 LTS&lt;br&gt;内网IP : 192.168.1.110&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install bind9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.olei.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="DNS服务器" scheme="http://blog.olei.me/tags/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo next中接入DaoVoice</title>
    <link href="http://blog.olei.me/2017/10/25/hexo-next%E4%B8%AD%E6%8E%A5%E5%85%A5DaoVoice/"/>
    <id>http://blog.olei.me/2017/10/25/hexo-next中接入DaoVoice/</id>
    <published>2017-10-25T06:15:06.000Z</published>
    <updated>2017-10-25T06:19:15.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><ul><li>官方网站：<a href="http://www.daovoice.io/" target="_blank" rel="external">DaoVoice</a></li><li>填写信息：</li></ul><a id="more"></a><p><img src="http://onsjbscqd.bkt.clouddn.com/image/daovoice_05.png" alt=""></p><ul><li>进入<code>应用设置</code> -&gt; <code>安装到网站</code><br><img src="http://onsjbscqd.bkt.clouddn.com/image/daovoice_03.png" alt=""></li><li>获取<code>接入代码</code>和<code>app_id</code><br><img src="http://onsjbscqd.bkt.clouddn.com/image/daovoice_08.png" alt=""></li></ul><h3 id="编写主题配置文件"><a href="#编写主题配置文件" class="headerlink" title="编写主题配置文件"></a>编写主题配置文件</h3><ul><li>找到<code>themes/next/_config.yml</code>目录</li><li>增加以下配置，其中 <code>app_id</code> 就是上图中红框中的 <code>app_id</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">daovoice:</div><div class="line">  enable: true</div><div class="line">  app_id: ******</div></pre></td></tr></table></figure><h3 id="编写DaoVoice接入代码"><a href="#编写DaoVoice接入代码" class="headerlink" title="编写DaoVoice接入代码"></a>编写<code>DaoVoice</code>接入代码</h3><ul><li>找到<code>themes/next/layout/_third-party/</code>目录</li><li>在该目录下新增<code>daovoice/daovoice.swig</code> 文件</li><li><code>daovoice.swig</code>文件中写入<code>DaoVoice</code> 接入代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.daovoice.enable %&#125;</div><div class="line">   &lt;script&gt;</div><div class="line">     (function(i,s,o,g,r,a,m)&#123;</div><div class="line">     i[&quot;DaoVoiceObject&quot;]=r;</div><div class="line">     i[r]=i[r]||function()&#123;</div><div class="line">     (i[r].q=i[r].q||[]).push(arguments)&#125;,</div><div class="line">     i[r].l=1*new Date();</div><div class="line">     a=s.createElement(o),</div><div class="line">     m=s.getElementsByTagName(o)[0];</div><div class="line">     a.async=1;</div><div class="line">     a.src=g;</div><div class="line">     a.charset=&quot;utf-8&quot;;</div><div class="line">     m.parentNode.insertBefore(a,m)</div><div class="line">     &#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/&#123;&#123; theme.daovoice.app_id &#125;&#125;.js&quot;,&quot;daovoice&quot;)</div><div class="line">     daovoice(&apos;init&apos;, &#123;</div><div class="line">     app_id: &quot;&#123;&#123; theme.daovoice.app_id &#125;&#125;&quot;</div><div class="line">     &#125;);</div><div class="line">     daovoice(&apos;update&apos;);</div><div class="line">   &lt;/script&gt;</div><div class="line"> &#123;% endif %&#125;</div></pre></td></tr></table></figure><h3 id="在模板文件里引入DaoVoice接入代码"><a href="#在模板文件里引入DaoVoice接入代码" class="headerlink" title="在模板文件里引入DaoVoice接入代码"></a>在模板文件里引入<code>DaoVoice</code>接入代码</h3><ul><li>找到<code>themes/next/layout/_layout.swig</code>文件</li><li>引入刚才我们上面写的 daovoice.swig 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% include &apos;_third-party/daovoice/daovoice.swig&apos; %&#125;</div></pre></td></tr></table></figure><h3 id="检验是否接入成功"><a href="#检验是否接入成功" class="headerlink" title="检验是否接入成功"></a>检验是否接入成功</h3><ul><li>运行如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g    // 生成静态文件</div><div class="line">$ hexo s    // 在本地起测试服务器</div></pre></td></tr></table></figure><ul><li>查看 <code>http://localhost:4000/</code> 页面是否右下角已经有了 <code>DaoVoice</code> 小图标<br><img src="http://onsjbscqd.bkt.clouddn.com/image/daovoice_07.png" alt=""></li><li>之后运行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d   #上传到github上</div></pre></td></tr></table></figure><blockquote><p><code>DaoVoice</code> 的这个小图标可以自定义样式和位置, 可以调整到你喜欢的位置<br>引用：<a href="http://olivewind.com/2017/17040305/" target="_blank" rel="external">http://olivewind.com/2017/17040305/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;注册&quot;&gt;&lt;a href=&quot;#注册&quot; class=&quot;headerlink&quot; title=&quot;注册&quot;&gt;&lt;/a&gt;注册&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;官方网站：&lt;a href=&quot;http://www.daovoice.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DaoVoice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;填写信息：&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="建站" scheme="http://blog.olei.me/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="工具" scheme="http://blog.olei.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>composer利用satis创建私人仓库</title>
    <link href="http://blog.olei.me/2017/10/24/composer%E5%88%A9%E7%94%A8satis%E5%88%9B%E5%BB%BA%E7%A7%81%E4%BA%BA%E4%BB%93%E5%BA%93/"/>
    <id>http://blog.olei.me/2017/10/24/composer利用satis创建私人仓库/</id>
    <published>2017-10-24T09:17:33.000Z</published>
    <updated>2017-10-24T10:32:57.491Z</updated>
    
    <content type="html"><![CDATA[<h3 id="composer安装"><a href="#composer安装" class="headerlink" title="composer安装"></a>composer安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ curl -sS https://getcomposer.org/installer | php</div><div class="line">$ mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure><h3 id="生成satis"><a href="#生成satis" class="headerlink" title="生成satis"></a>生成satis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ composer create-project composer/satis --stability=dev --keep-vcs</div></pre></td></tr></table></figure><a id="more"></a><ul><li>创建<code>statis.json</code>，配置如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;name&quot;: &quot;My Repository&quot;,</div><div class="line">  &quot;homepage&quot;: &quot;http://packages.example.org&quot;,</div><div class="line">  &quot;repositories&quot;: [</div><div class="line">    &#123; &quot;type&quot;: &quot;vcs&quot;, &quot;url&quot;: &quot;https://github.com/mycompany/privaterepo&quot; &#125;,</div><div class="line">    &#123; &quot;type&quot;: &quot;vcs&quot;, &quot;url&quot;: &quot;http://svn.example.org/private/repo&quot; &#125;,</div><div class="line">    &#123; &quot;type&quot;: &quot;vcs&quot;, &quot;url&quot;: &quot;https://github.com/mycompany/privaterepo2&quot; &#125;</div><div class="line">  ],</div><div class="line">  &quot;require-all&quot;: true</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>require-all:true表示全部的包，需要指定包的，需要更改为：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;require&quot;: &#123;</div><div class="line">   &quot;company/package&quot;: &quot;*&quot;,</div><div class="line">    &quot;company/package2&quot;: &quot;*&quot;,</div><div class="line">    &quot;company/package3&quot;: &quot;2.0.0&quot;</div><div class="line">｝</div></pre></td></tr></table></figure><h3 id="安装web端"><a href="#安装web端" class="headerlink" title="安装web端"></a>安装web端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php bin/satis build satis.json public/</div></pre></td></tr></table></figure><blockquote><p>satis.json就是配置的文件，public时生成的管理网站  </p></blockquote><h3 id="部分更新"><a href="#部分更新" class="headerlink" title="部分更新"></a>部分更新</h3><ul><li>单独的一个存储库的话</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php bin/satis build --repository-url https://only.my/repo.git satis.json web/</div></pre></td></tr></table></figure><h3 id="使用私有源"><a href="#使用私有源" class="headerlink" title="使用私有源"></a>使用私有源</h3><ul><li>只需要在项目的 composer.json 文件的根上添加</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;repositories&quot;: [</div><div class="line">    &#123;</div><div class="line">      &quot;type&quot;: &quot;composer&quot;,</div><div class="line">      &quot;url&quot;: &quot;http://satis仓库地址/&quot;</div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  &quot;require&quot;: &#123;</div><div class="line">    &quot;company/package&quot;: &quot;1.2.0&quot;,</div><div class="line">    &quot;company/package2&quot;: &quot;1.5.2&quot;,</div><div class="line">    &quot;company/package3&quot;: &quot;dev-master&quot;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>然后执行<code>composer update</code>即可<ul><li>注意：源里面只有“仓库列表”，并没有真的同步代码仓库过来，所以下载还要走托管代码的机器，比如 GitHub，内部 GitLab 等。</li></ul></li><li>如果从 clone 速度太慢了，我们也可以缓存在我们的仓库中,在satis.json中增加:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;archive&quot;: &#123;</div><div class="line">        &quot;directory&quot;: &quot;dist&quot;,</div><div class="line">        &quot;format&quot;: &quot;tar&quot;,</div><div class="line">        &quot;prefix-url&quot;: &quot;http://packages.dev.com/&quot;,</div><div class="line">        &quot;skip-dev&quot;: true</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>*1. directory: 必需要的，表示生成的压缩包存放的目录，会在我们build时的目录中</p><ol><li>format: 压缩包格式, zip（默认） tar</li><li>prefix-url: 下载链接的前缀的Url,默认会从homepage中取</li><li>skip-dev: 默认为假，是否跳过开发分支</li><li>absolute-directory: 绝对目录</li><li>whitelist: 白名单，只下载哪些</li><li>blacklist: 黑名单，不下载哪些</li><li>checksum: 可选，是否验证sha1*</li></ol><ul><li>然后重新再次生成就ok了：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php bin/satis build satis.json public/</div></pre></td></tr></table></figure><blockquote><p>会发现public目录多了一个dist目录，里面有很多tar的压缩包，这就是我们的package。 之后再执行composer update就会发现快了很多。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;composer安装&quot;&gt;&lt;a href=&quot;#composer安装&quot; class=&quot;headerlink&quot; title=&quot;composer安装&quot;&gt;&lt;/a&gt;composer安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ curl -sS https://getcomposer.org/installer | php&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ mv composer.phar /usr/local/bin/composer&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;生成satis&quot;&gt;&lt;a href=&quot;#生成satis&quot; class=&quot;headerlink&quot; title=&quot;生成satis&quot;&gt;&lt;/a&gt;生成satis&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ composer create-project composer/satis --stability=dev --keep-vcs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.olei.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="composer" scheme="http://blog.olei.me/tags/composer/"/>
    
      <category term="satis" scheme="http://blog.olei.me/tags/satis/"/>
    
  </entry>
  
  <entry>
    <title>gitlab的安装，更新，备份恢复</title>
    <link href="http://blog.olei.me/2017/10/20/gitlab%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%8C%E6%9B%B4%E6%96%B0%EF%BC%8C%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/"/>
    <id>http://blog.olei.me/2017/10/20/gitlab的安装，更新，备份恢复/</id>
    <published>2017-10-20T09:39:11.000Z</published>
    <updated>2017-10-24T10:33:52.657Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>配置国内镜像源<blockquote><p>由于国内镜像，博主我只找到清华大学的镜像中有<code>gitlab-ce</code>，所以我们就配置好清华大学的镜像 </p></blockquote></li></ul><ol><li>添加GitLab 的 GPG 公钥:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl https://packages.gitlab.com/gpg.key 2&gt; /dev/null | sudo apt-key add - &amp;&gt;/dev/null</div></pre></td></tr></table></figure><a id="more"></a><ol><li>在<code>/etc/apt/sources.list.d/gitlab-ce.list</code>写入：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deb https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu xenial main</div></pre></td></tr></table></figure><ul><li>国外镜像添加的是:  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deb https://packages.gitlab.com/gitlab/gitlab-ce/ubuntu/ xenial main</div></pre></td></tr></table></figure></li></ul><blockquote><p>国外的镜像在国内的话，连接不是很稳定，有时候网速贼快，有时候又特么忒慢，建议使用国内源<code>(也不是很稳定)</code></p><ol><li>安装</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install gitlab-ce</div></pre></td></tr></table></figure><ol><li>配置</li></ol><ul><li>修改<code>/etc/gitlab/</code>目录中的<code>gitlab.rb</code>文件，配置域名，配置邮箱等等</li><li>重新配置命令:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gitlab-ctl reconfigure</div></pre></td></tr></table></figure><ol><li>运行</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gitlab-ctl restart</div></pre></td></tr></table></figure><h3 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h3><ol><li>备份</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gitlab-rake gitlab:backup:create</div></pre></td></tr></table></figure><blockquote><p>在<code>/var/opt/gitlab/backups</code>目录下会有类似如下格式的备份文件:<br><code>1466811825_gitlab_backup.tar</code></p><ol><li>恢复</li></ol><ul><li>恢复<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 停止相关数据连接服务</div><div class="line">$ sudo gitlab-ctl stop unicorn </div><div class="line">$ sudo gitlab-ctl stop sidekiq</div><div class="line"></div><div class="line">$ sudo gitlab-rake gitlab:backup:restore BACKUP=xxxx   # xxx为备份文件_gitlab_backup.tar前面的数字</div></pre></td></tr></table></figure></li></ul></blockquote><ul><li>启动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo gitlab-ctl start</div></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install gitlab-ce</div><div class="line">$ sudo apt-get reconfigure</div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;配置国内镜像源&lt;blockquote&gt;
&lt;p&gt;由于国内镜像，博主我只找到清华大学的镜像中有&lt;code&gt;gitlab-ce&lt;/code&gt;，所以我们就配置好清华大学的镜像 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;添加GitLab 的 GPG 公钥:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ curl https://packages.gitlab.com/gpg.key 2&amp;gt; /dev/null | sudo apt-key add - &amp;amp;&amp;gt;/dev/null&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.olei.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="gitlab" scheme="http://blog.olei.me/tags/gitlab/"/>
    
  </entry>
  
</feed>
