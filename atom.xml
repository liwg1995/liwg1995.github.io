<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>禹都一只猫</title>
  
  <subtitle>逐梦，努力，乐观，追求</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liwg1995.github.io/"/>
  <updated>2017-10-19T11:40:46.354Z</updated>
  <id>https://liwg1995.github.io/</id>
  
  <author>
    <name>olei.me</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php+nginx+http/https的Basic Authentication认证</title>
    <link href="https://liwg1995.github.io/2017/10/19/php-nginx-http-https%E7%9A%84basic%E8%AE%A4%E8%AF%81/"/>
    <id>https://liwg1995.github.io/2017/10/19/php-nginx-http-https的basic认证/</id>
    <published>2017-10-19T11:31:20.000Z</published>
    <updated>2017-10-19T11:40:46.354Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写入帐号密码"><a href="#写入帐号密码" class="headerlink" title="写入帐号密码"></a>写入帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo printf &quot;xxxxx:$(openssl passwd -crypt *****)\n&quot; &gt;&gt; /etc/nginx/pass_file</div></pre></td></tr></table></figure><blockquote><p><code>xxxxx</code>为用户名，<code>*****</code>为该帐号的密码</p><h3 id="nginx配置文件"><a href="#nginx配置文件" class="headerlink" title="nginx配置文件"></a><code>nginx</code>配置文件</h3></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">location / &#123;</div><div class="line">    auth_basic &quot;Restricted&quot;;</div><div class="line">        auth_basic_user_file /etc/nginx/pass_file;</div><div class="line">        root /var/www/satis/web;</div><div class="line">        try_files $uri $uri/ /index.php?$query_string;</div><div class="line">        location ~ \.php$ &#123;</div><div class="line">            fastcgi_pass   127.0.0.1:9000;</div><div class="line">            fastcgi_index  index.php;</div><div class="line">            include        fastcgi_params;</div><div class="line">            fastcgi_param  SCRIPT_FILENAME  $realpath_root/$fastcgi_script_name;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><blockquote><p>auth_basic_user_file /etc/nginx/pass_file;`</p><ul><li>注意这里的路径，错了会一直<code>404</code></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写入帐号密码&quot;&gt;&lt;a href=&quot;#写入帐号密码&quot; class=&quot;headerlink&quot; title=&quot;写入帐号密码&quot;&gt;&lt;/a&gt;写入帐号密码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo printf &amp;quot;xxxxx:$(openssl passwd -crypt *****)\n&amp;quot; &amp;gt;&amp;gt; /etc/nginx/pass_file&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;xxxxx&lt;/code&gt;为用户名，&lt;code&gt;*****&lt;/code&gt;为该帐号的密码&lt;/p&gt;
&lt;h3 id=&quot;nginx配置文件&quot;&gt;&lt;a href=&quot;#nginx配置文件&quot; class=&quot;headerlink&quot; title=&quot;nginx配置文件&quot;&gt;&lt;/a&gt;&lt;code&gt;nginx&lt;/code&gt;配置文件&lt;/h3&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https://liwg1995.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="https://liwg1995.github.io/tags/nginx/"/>
    
      <category term="Basic Authentication" scheme="https://liwg1995.github.io/tags/Basic-Authentication/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16.04安装openldap以及phpldapadmin</title>
    <link href="https://liwg1995.github.io/2017/10/18/ubuntu16-04%E5%AE%89%E8%A3%85openldap%E4%BB%A5%E5%8F%8Aphpldapadmin/"/>
    <id>https://liwg1995.github.io/2017/10/18/ubuntu16-04安装openldap以及phpldapadmin/</id>
    <published>2017-10-18T09:49:13.000Z</published>
    <updated>2017-10-19T07:24:22.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="openldap"><a href="#openldap" class="headerlink" title="openldap"></a>openldap</h2><h3 id="安装openldap"><a href="#安装openldap" class="headerlink" title="安装openldap"></a>安装openldap</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install slapd ldap-utils</div></pre></td></tr></table></figure><a id="more"></a><blockquote><p>安装过程中会提示一些信息，自己输入一些<code>dc</code>，其他的询问<code>yes</code> or <code>no</code>的信息的时候，直接回车默认</p><h3 id="重新配置sldap"><a href="#重新配置sldap" class="headerlink" title="重新配置sldap"></a>重新配置sldap</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo dpkg-reconfigure slapd</div></pre></td></tr></table></figure><blockquote><p>期间会让重新输入密码，dc之类的信息，填写就成，其余的直接点回车</p><h3 id="查询是否安装成功"><a href="#查询是否安装成功" class="headerlink" title="查询是否安装成功"></a>查询是否安装成功</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ldapsearch -x</div></pre></td></tr></table></figure><blockquote><p>有信息输出就证明安装成功</p><ul><li>/etc/ldap/下的ldap.conf配置文件:</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#</div><div class="line"># LDAP Defaults</div><div class="line">#</div><div class="line"></div><div class="line"># See ldap.conf(5) for details</div><div class="line"># This file should be world readable but not world writable.</div><div class="line"></div><div class="line">BASE    dc=olei,dc=me</div><div class="line">URI     ldap://127.0.0.1</div><div class="line">#ldap://ldap-master.i1995.cn:666</div><div class="line"></div><div class="line">#SIZELIMIT      12</div><div class="line">#TIMELIMIT      15</div><div class="line">#DEREF          never</div><div class="line"></div><div class="line"># TLS certificates (needed for GnuTLS)</div><div class="line">TLS_CACERT      /etc/ssl/certs/ca-certificates.crt</div></pre></td></tr></table></figure><h2 id="phpldapadmin"><a href="#phpldapadmin" class="headerlink" title="phpldapadmin"></a>phpldapadmin</h2><h3 id="安装phpldapadmin"><a href="#安装phpldapadmin" class="headerlink" title="安装phpldapadmin"></a>安装phpldapadmin</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install phpldapadmin</div></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><ul><li>/etc/phpldapadmin/config.php</li></ul><ol><li>需要将这个给去掉注释，并修改为<code>true</code>：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$config-&gt;custom-&gt;appearance[&apos;hide_template_warning&apos;] = true;</div></pre></td></tr></table></figure><ol><li>修改下面的信息：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$servers-&gt;setValue(&apos;server&apos;,&apos;host&apos;,&apos;xx.xx.xx.xx&apos;);</div><div class="line">/* The port your LDAP server listens on (no quotes). 389 is standard. */</div><div class="line">// $servers-&gt;setValue(&apos;server&apos;,&apos;port&apos;,389);</div><div class="line"></div><div class="line">/* Array of base DNs of your LDAP server. Leave this blank to have phpLDAPadmin</div><div class="line">   auto-detect it for you. */</div><div class="line">$servers-&gt;setValue(&apos;server&apos;,&apos;base&apos;,array(&apos;dc=olei,dc=me&apos;));</div></pre></td></tr></table></figure><blockquote><p><code>host</code>填自己<code>server</code>端的IP<br><code>dc</code>填写自己的<code>dc</code>名，上面是我的<code>dc</code>名</p><ol><li>还有这么一行：</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$servers-&gt;setValue(&apos;login&apos;,&apos;bind_id&apos;,&apos;cn=admin,dc=olei,dc=me&apos;);</div></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><ul><li>安装php7.0，nginx</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install php7.0 php7.0-pfm nginx</div></pre></td></tr></table></figure><ul><li>配置nginx信息<blockquote><p><code>/etc/nginx/conf.d</code>里面添加一个<code>ldap.conf</code> 文件：</p><ul><li>http:</li></ul></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        server_name 127.0.0.1;</div><div class="line">        listen 80;</div><div class="line"></div><div class="line"># document root</div><div class="line">        root /usr/share/nginx/www;</div><div class="line">        index index.php index.html index.htm;</div><div class="line"></div><div class="line"># application: phpldapadmin</div><div class="line">       location /phpldapadmin &#123;</div><div class="line">       alias /usr/share/phpldapadmin/htdocs;</div><div class="line">       index index.php index.html index.htm;</div><div class="line"></div><div class="line">  &#125;</div><div class="line">       location ~ ^/phpldapadmin/.*\.php$ &#123;</div><div class="line">       root /usr/share;</div><div class="line">       if ($request_filename !~* htdocs) &#123;</div><div class="line">            rewrite ^/phpldapadmin(/.*)?$ /phpldapadmin/htdocs$1;</div><div class="line">     &#125;</div><div class="line">       fastcgi_pass unix:/run/php/php7.0-fpm.sock;</div><div class="line">       fastcgi_index index.php;</div><div class="line">       fastcgi_param SCRIPT_FILENAME $request_filename;</div><div class="line">       include fastcgi_params;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"># logging</div><div class="line">    error_log /var/log/nginx/phpldapadmin.error.log;</div><div class="line">    access_log /var/log/nginx/phpldapadmin.access.log;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>https:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">listen 443 ssl http2;</div><div class="line">        server_name i1995.cn;</div><div class="line">       # listen 80;</div><div class="line"></div><div class="line"># document root</div><div class="line">        root /usr/share/nginx/www;</div><div class="line">        index index.php index.html index.htm;</div><div class="line"></div><div class="line">ssl on;</div><div class="line">        ssl_certificate /etc/letsencrypt/live/i1995.cn/fullchain.pem;</div><div class="line">        ssl_certificate_key /etc/letsencrypt/live/i1995.cn/privkey.pem;</div><div class="line">        ssl_ciphers &apos;ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4&apos;;</div><div class="line">        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;</div><div class="line">        ssl_prefer_server_ciphers on;</div><div class="line">        ssl_session_cache  builtin:1000  shared:SSL:10m;</div><div class="line">        ssl_session_timeout  5m;</div><div class="line"># application: phpldapadmin</div><div class="line">       location /phpldapadmin &#123;</div><div class="line">       alias /usr/share/phpldapadmin/htdocs;</div><div class="line">       index index.php index.html index.htm;</div><div class="line">  &#125;</div><div class="line">       location ~ ^/phpldapadmin/.*\.php$ &#123;</div><div class="line">       root /usr/share;</div><div class="line">       if ($request_filename !~* htdocs) &#123;</div><div class="line">            rewrite ^/phpldapadmin(/.*)?$ /phpldapadmin/htdocs$1;</div><div class="line">     &#125;</div><div class="line">       fastcgi_pass unix:/run/php/php7.0-fpm.sock;</div><div class="line">       fastcgi_index index.php;</div><div class="line">       fastcgi_param SCRIPT_FILENAME $request_filename;</div><div class="line">       include fastcgi_params;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"># logging</div><div class="line">    error_log /var/log/nginx/phpldapadmin.ssl.error.log;</div><div class="line">    access_log /var/log/nginx/phpldapadmin.ssl.access.log;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p>https的证书申请方式请查看：<a href="http://blog.olei.me/2017/10/18/certbot%E5%85%8D%E8%B4%B9SSL%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E9%83%A8%E7%BD%B2/#more" target="_blank" rel="external">ubuntu 16.04－nginx－ssl</a><br>之后访问<a href="https://domain/phpldapadmin" target="_blank" rel="external">https://domain/phpldapadmin</a><br>比如：我的<a href="https://i1995.cn/phpldapadmin" target="_blank" rel="external">https://i1995.cn/phpldapadmin</a>  </p><h2 id=""><a href="#" class="headerlink" title="  "></a><img src="https://images.lwg1995.cn/phpldapadmin.png" alt="">  </h2></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;openldap&quot;&gt;&lt;a href=&quot;#openldap&quot; class=&quot;headerlink&quot; title=&quot;openldap&quot;&gt;&lt;/a&gt;openldap&lt;/h2&gt;&lt;h3 id=&quot;安装openldap&quot;&gt;&lt;a href=&quot;#安装openldap&quot; class=&quot;headerlink&quot; title=&quot;安装openldap&quot;&gt;&lt;/a&gt;安装openldap&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install slapd ldap-utils&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="https://liwg1995.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="ldap,phpldapadmin" scheme="https://liwg1995.github.io/tags/ldap-phpldapadmin/"/>
    
  </entry>
  
  <entry>
    <title>certbot免费SSL证书申请部署</title>
    <link href="https://liwg1995.github.io/2017/10/18/certbot%E5%85%8D%E8%B4%B9SSL%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E9%83%A8%E7%BD%B2/"/>
    <id>https://liwg1995.github.io/2017/10/18/certbot免费SSL证书申请部署/</id>
    <published>2017-10-18T03:19:53.000Z</published>
    <updated>2017-10-18T03:27:30.357Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install software-properties-common</div><div class="line">$ sudo add-apt-repository ppa:certbot/certbot</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install python-certbot-nginx</div></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ certbot  certonly  --cert-name  xxxx  -d  xxxx</div></pre></td></tr></table></figure><blockquote><p>第一个<code>xxx</code>是证书名，第二个<code>xxx</code>是为了给哪个证书申请的域名</p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>申请的域名一般都是90天的，所以我们需要更新</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ certbot renew</div></pre></td></tr></table></figure><hr><blockquote><p>参考：<a href="https://certbot.eff.org/#ubuntuxenial-nginx" target="_blank" rel="external">certbot for nginx</a><br>以上是基于ubuntu 16.04的linux系统，更多的请参考：<a href="https://certbot.eff.org" target="_blank" rel="external">certbot官网</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install software-properties-common&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo add-apt-repository ppa:certbot/certbot&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install python-certbot-nginx&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;部署&quot;&gt;&lt;a href=&quot;#部署&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署&lt;/h3&gt;
    
    </summary>
    
      <category term="技术" scheme="https://liwg1995.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="certbot,ssl" scheme="https://liwg1995.github.io/tags/certbot-ssl/"/>
    
  </entry>
  
  <entry>
    <title>迁移docker下安装的sentry</title>
    <link href="https://liwg1995.github.io/2017/10/16/%E8%BF%81%E7%A7%BBdocker%E4%B8%8B%E5%AE%89%E8%A3%85%E7%9A%84sentry/"/>
    <id>https://liwg1995.github.io/2017/10/16/迁移docker下安装的sentry/</id>
    <published>2017-10-16T10:16:30.000Z</published>
    <updated>2017-10-16T10:39:57.174Z</updated>
    
    <content type="html"><![CDATA[<h3 id="还原postgresql数据库"><a href="#还原postgresql数据库" class="headerlink" title="还原postgresql数据库"></a>还原postgresql数据库</h3><p>1.停止web,base,worker,cron容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker stop ID  #ID为容器的id</div></pre></td></tr></table></figure><p>2.备份<code>postgres</code>数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker exec -t onpremise_postgres_1 pg_dumpall -U postgres &gt; ~/data/all.sql</div></pre></td></tr></table></figure><a id="more"></a><blockquote><p>将备份的文件传到需要还原的机器上<br>还原的服务器也需要停止上面的那些容器</p></blockquote><p>3.进入<code>postgresql</code>容器删除<code>postgres</code>数据库，并再次创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ docker exec -it onpremise_postgres_1 psql -d template1 -U postgres  </div><div class="line">template1=#  drop database postgres</div><div class="line">template1=#  create database postgres</div></pre></td></tr></table></figure><p>3.还原之前备份的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat all.sql | docker exec -i onpremise_postgres_1 psql -U postgres</div></pre></td></tr></table></figure><p>4.启动停止的<code>容器</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker start ID  #ID为容器的id</div></pre></td></tr></table></figure><blockquote><p>访问：<a href="http://ip:9000" target="_blank" rel="external">http://ip:9000</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;还原postgresql数据库&quot;&gt;&lt;a href=&quot;#还原postgresql数据库&quot; class=&quot;headerlink&quot; title=&quot;还原postgresql数据库&quot;&gt;&lt;/a&gt;还原postgresql数据库&lt;/h3&gt;&lt;p&gt;1.停止web,base,worker,cron容器&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ docker stop ID  #ID为容器的id&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.备份&lt;code&gt;postgres&lt;/code&gt;数据库&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ docker exec -t onpremise_postgres_1 pg_dumpall -U postgres &amp;gt; ~/data/all.sql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="https://liwg1995.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="docker" scheme="https://liwg1995.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker基础命令浅谈</title>
    <link href="https://liwg1995.github.io/2017/10/13/docker%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E6%B5%85%E8%B0%88/"/>
    <id>https://liwg1995.github.io/2017/10/13/docker基础命令浅谈/</id>
    <published>2017-10-13T15:04:32.000Z</published>
    <updated>2017-10-13T15:31:13.300Z</updated>
    
    <content type="html"><![CDATA[<h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><ul><li>下载镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker pull  镜像名</div></pre></td></tr></table></figure><a id="more"></a><ul><li>删除镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker rmi xxx</div></pre></td></tr></table></figure><blockquote><p>xxx为仓库源或者镜像ID<br>若无法删除，则删除其依赖  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rm `docker ps -aq`</div></pre></td></tr></table></figure></blockquote><ul><li>导入导出镜像  </li></ul><ol><li><p>导出镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker save -o xxx.tar xxx</div></pre></td></tr></table></figure></li><li><p>导入本地镜像</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker load --input xxx.tar</div></pre></td></tr></table></figure><ol><li>从一台机器迁移到另外一台机器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker save xxx | bzip2 | ssh ....@.... &quot;cat  |  docker load &quot;</div></pre></td></tr></table></figure><blockquote><p>xxx为镜像名  </p><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><ul><li>以shell运行容器</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker  run  -it  linux镜像名  /bin/bash</div></pre></td></tr></table></figure><ul><li>后台启动容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker  run  -d ...</div></pre></td></tr></table></figure><ul><li>不进入容器，对该容器进行命令行操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker exec -it 容器名 command1</div></pre></td></tr></table></figure><h3 id="第三方仓库操作"><a href="#第三方仓库操作" class="headerlink" title="第三方仓库操作"></a>第三方仓库操作</h3><blockquote><p>已腾讯云的为例  </p><ul><li>在腾讯云上面的容器服务中，创建自己的镜像，然后创建镜像<ul><li>我的仓库名为<code>myrepo</code></li><li>我的地址为:<code>ccr.ccs.tencentyun.com/myrepo</code></li></ul></li><li>登录(以我的qq为例)</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker login --username=986728544 ccr.ccs.tencentyun.com</div></pre></td></tr></table></figure><ul><li>获取上面的镜像(加入我有redis镜像)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker pull ccr.ccs.tencentyun.com/myrepo/redis:[tag]</div></pre></td></tr></table></figure><ul><li>将本地镜像推到上面去</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ docker tag [ImageId] ccr.ccs.tencentyun.com/myrepo/redis:[tag]</div><div class="line">$ docker push ccr.ccs.tencentyun.com/myrepo/redis:[tag]</div></pre></td></tr></table></figure><blockquote><p>[tag]填写腾讯云上面的镜像版本</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;镜像&quot;&gt;&lt;a href=&quot;#镜像&quot; class=&quot;headerlink&quot; title=&quot;镜像&quot;&gt;&lt;/a&gt;镜像&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下载镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ docker pull  镜像名&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="https://liwg1995.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="docker" scheme="https://liwg1995.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker下安装sentry</title>
    <link href="https://liwg1995.github.io/2017/10/09/docker%E4%B8%8B%E5%AE%89%E8%A3%85sentry/"/>
    <id>https://liwg1995.github.io/2017/10/09/docker下安装sentry/</id>
    <published>2017-10-09T10:25:38.000Z</published>
    <updated>2017-10-12T10:41:06.121Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a><code>安装Docker</code></h3><ul><li>脚本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget -qO- https://get.docker.com/ | sh</div></pre></td></tr></table></figure><ul><li>源</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</div><div class="line"></div><div class="line">$ sudo add-apt-repository \</div><div class="line">    &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</div><div class="line">    $(lsb_release -cs) \</div><div class="line">    stable&quot;</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install docker-ce</div></pre></td></tr></table></figure><a id="more"></a><h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装<code>docker-compose</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pip install -U docker-compose</div></pre></td></tr></table></figure><blockquote><p>如果提示没有pip，则需要安装pip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ apt-get install python-pip</div></pre></td></tr></table></figure></p></blockquote><h3 id="获取sentry"><a href="#获取sentry" class="headerlink" title="获取sentry"></a>获取<code>sentry</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/getsentry/onpremise.git</div></pre></td></tr></table></figure><blockquote><p>cd到onpremise目录下  </p></blockquote><p>1.构建容器并创建数据库和sentry安装目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir  -p data/&#123;sentry,postgres&#125;</div></pre></td></tr></table></figure><p>2.配置国内源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/docker</div><div class="line">$ touch daemon.json</div></pre></td></tr></table></figure><blockquote><p>在<code>daemon.json</code>里面写入：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn/&quot;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ service docker restart</div></pre></td></tr></table></figure><p>3.生成secret key并添加到docker-compose文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker-compose run --rm web config generate-secret-key</div></pre></td></tr></table></figure><p>4.重建数据库，并创建sentry超级管理员用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker-compose run --rm web upgrade</div></pre></td></tr></table></figure><p>5.启动所有的服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker-compose up -d</div></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><ul><li>访问<code>http://ip:9000</code><ul><li>ip为你本地或者服务器的ip<blockquote><p>以上是ubuntu 16.04下进行</p></blockquote></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;&lt;code&gt;安装Docker&lt;/code&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ wget -qO- https://get.docker.com/ | sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;源&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo add-apt-repository \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(lsb_release -cs) \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    stable&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install docker-ce&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="https://liwg1995.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="docker,sentry" scheme="https://liwg1995.github.io/tags/docker-sentry/"/>
    
  </entry>
  
  <entry>
    <title>初次安装hexo注意的事项</title>
    <link href="https://liwg1995.github.io/2017/09/30/%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85hexo%E6%B3%A8%E6%84%8F%E7%9A%84%E4%BA%8B%E9%A1%B9/"/>
    <id>https://liwg1995.github.io/2017/09/30/初次安装hexo注意的事项/</id>
    <published>2017-09-30T13:39:52.000Z</published>
    <updated>2017-09-30T14:43:56.323Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前期需要安装的组件"><a href="#前期需要安装的组件" class="headerlink" title="前期需要安装的组件"></a>前期需要安装的组件</h3><ul><li>nodejs  <ul><li>下载<a href="https://nodejs.org" target="_blank" rel="external">nodejs</a><ul><li>windows:<a href="https://nodejs.org/dist/v6.11.3/node-v6.11.3-x64.msi" target="_blank" rel="external">windows</a></li><li>linux（<code>ubuntu</code>为例）</li></ul></li></ul></li></ul><a id="more"></a>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo add-apt-repository ppa:chris-lea/node.js</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install nodejs</div></pre></td></tr></table></figure><ul><li>或者采用<code>nvm</code>安装：<br><code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br><code>$ nvm install 4</code>  </li></ul><blockquote><p>主要是要用到npm<br>国内的话，npm install会超级慢，天朝墙很高，你有能耐就翻过去咯~</p><ul><li>git<br>既然是要跟github打交道，那么git组件是必不可少的了</li></ul></blockquote><h3 id="翻墙问题"><a href="#翻墙问题" class="headerlink" title="翻墙问题"></a>翻墙问题</h3><h4 id="我要是没有那个能耐怎么办呢？"><a href="#我要是没有那个能耐怎么办呢？" class="headerlink" title="我要是没有那个能耐怎么办呢？"></a>我要是没有那个能耐怎么办呢？</h4><ul><li>国内有很好的镜像源，比如清华源:<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="external">清华源</a>等等  <h4 id="我们用淘宝源，来安装一个国内比较快的命令cnpm来代替npm"><a href="#我们用淘宝源，来安装一个国内比较快的命令cnpm来代替npm" class="headerlink" title="我们用淘宝源，来安装一个国内比较快的命令cnpm来代替npm"></a>我们用淘宝源，来安装一个国内比较快的命令<code>cnpm</code>来代替<code>npm</code></h4><code>$ npm install -g cnpm --registry=http://registry.npm.taobao.org</code>  <blockquote><p>因为我们安装好npm之后，之后要安装很多npm的组件，都要用到<code>npm install</code>，会超级慢，所以我们用<code>cnpm</code>来代替<code>npm</code></p></blockquote></li></ul><h3 id="选择镜像"><a href="#选择镜像" class="headerlink" title="选择镜像"></a>选择镜像</h3><h4 id="我们安装好hexo的时候，要运行hexo的一些命令，会发现特喵还是这么慢，怎么破？"><a href="#我们安装好hexo的时候，要运行hexo的一些命令，会发现特喵还是这么慢，怎么破？" class="headerlink" title="我们安装好hexo的时候，要运行hexo的一些命令，会发现特喵还是这么慢，怎么破？"></a>我们安装好<code>hexo</code>的时候，要运行<code>hexo</code>的一些命令，会发现特喵还是这么慢，怎么破？</h4><ul><li>我们安装<code>nrm</code>来选择镜像<br><code>$ cnpm install -g nrm --save</code>  </li><li>选择镜像<br><code>$ nrm use taobao</code>  <blockquote><p>这样我们就选择好了国内镜像  </p></blockquote></li></ul><h3 id="咋个安装hexo啊？"><a href="#咋个安装hexo啊？" class="headerlink" title="咋个安装hexo啊？"></a>咋个安装<code>hexo</code>啊？</h3><ul><li><code>cnpm</code>安装好了，我们就用<br><code>$ cnpm install -g hexo-cli</code><br><code>$ cnpm install -g hexo</code><h3 id="github上注意的东西"><a href="#github上注意的东西" class="headerlink" title="github上注意的东西"></a><code>github</code>上注意的东西</h3></li></ul><ol><li><code>github</code>的<code>repo</code>的名称必须是<code>用户名.github.io</code><ul><li>比如：我的<code>github</code>用户名为<code>keykeyorange</code>,那么我的用户名就为：  </li><li><code>keykeyorange.github.io</code></li></ul></li><li>记得在<code>github</code>上面添加本地电脑的<code>.ssh</code>目录的<code>id_rsa.pub</code><blockquote><p>具体怎么生成，请百度：<a href="https://www.baidu.com" target="_blank" rel="external">baidu</a></p></blockquote></li></ol><h3 id="注意两个命令"><a href="#注意两个命令" class="headerlink" title="注意两个命令"></a>注意两个命令</h3><ol><li><code>hexo g</code><ul><li>第一次或许会提醒缺少组件，自己通过<code>cnpm</code>安装就对了</li><li>这个命令相当于<code>git</code>命令中的<code>git commit -a -m xxxxx</code></li></ul></li><li><code>hexo d</code><ul><li>这个命令相当于<code>git</code>命令中的<code>git push</code></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前期需要安装的组件&quot;&gt;&lt;a href=&quot;#前期需要安装的组件&quot; class=&quot;headerlink&quot; title=&quot;前期需要安装的组件&quot;&gt;&lt;/a&gt;前期需要安装的组件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;nodejs  &lt;ul&gt;
&lt;li&gt;下载&lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodejs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;windows:&lt;a href=&quot;https://nodejs.org/dist/v6.11.3/node-v6.11.3-x64.msi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;linux（&lt;code&gt;ubuntu&lt;/code&gt;为例）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="建站" scheme="https://liwg1995.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="建站" scheme="https://liwg1995.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://liwg1995.github.io/2017/09/30/hello-world/"/>
    <id>https://liwg1995.github.io/2017/09/30/hello-world/</id>
    <published>2017-09-30T03:39:49.045Z</published>
    <updated>2017-09-30T03:39:49.045Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>启用github hexo博客</title>
    <link href="https://liwg1995.github.io/2017/09/29/%E5%90%AF%E7%94%A8github-hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://liwg1995.github.io/2017/09/29/启用github-hexo博客/</id>
    <published>2017-09-29T14:38:00.000Z</published>
    <updated>2017-10-19T07:29:02.396Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今日启动hexo博客"><a href="#今日启动hexo博客" class="headerlink" title="今日启动hexo博客"></a>今日启动hexo博客</h3><a id="more"></a><ul><li>本博客托管至github上</li><li>本博客地址: <a href="http://blog.olei.me" target="_blank" rel="external">http://blog.olei.me</a></li><li>欢迎各位访问！禹都一只猫hexo分站，主站站点为:<a href="https://olei.me" target="_blank" rel="external">https://olei.me</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;今日启动hexo博客&quot;&gt;&lt;a href=&quot;#今日启动hexo博客&quot; class=&quot;headerlink&quot; title=&quot;今日启动hexo博客&quot;&gt;&lt;/a&gt;今日启动hexo博客&lt;/h3&gt;
    
    </summary>
    
      <category term="建站" scheme="https://liwg1995.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="github,hexo" scheme="https://liwg1995.github.io/tags/github-hexo/"/>
    
  </entry>
  
</feed>
